Terminals unused in grammar

   NOT
   LLAVEA
   LLAVEC


Estado 85 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 90 conflictos: 8 desplazamiento(s)/reducción(ones)
Estado 110 conflictos: 7 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: inicio $end

    1 inicio: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | iteracion
    6          | seleccion
    7          | declaracion
    8          | display
    9          | get
   10          | equmax
   11          | equmin

   12 $@1: /* vacío */

   13 asignacion: ID $@1 OP_ASIG tipoAsig

   14 tipoAsig: expresion
   15         | CTE_S

   16 iteracion: while
   17          | for

   18 while: WHILE condicion THEN programa

   19 seleccion: IF condicion THEN programa
   20          | IF condicion THEN programa ELSE programa

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

   22 display: DISPLAY ID
   23        | DISPLAY CTE_S

   24 get: GET ID

   25 equmax: IF EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   26       | WHILE EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   27       | FOR EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC

   28 equmin: IF EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC
   29       | WHILE EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC
   30       | FOR EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

   31 listaEqu: itemEqu
   32         | listaEqu COMA itemEqu

   33 itemEqu: ID
   34        | CTE_E
   35        | CTE_R

   36 listaVarDec: ID
   37            | listaVarDec COMA ID

   38 listaType: TYPE
   39          | listaType COMA TYPE

   40 TYPE: INTEGER
   41     | STRING
   42     | REAL

   43 expresion: termino
   44          | expresion OP_SUM termino
   45          | expresion OP_RESTA termino

   46 termino: factor
   47        | termino OP_MULT factor
   48        | termino OP_DIV factor

   49 factor: PARA expresion PARC
   50       | ID
   51       | CTE_E
   52       | CTE_R

   53 condicion: comparacion
   54          | condicion AND comparacion
   55          | condicion OR comparacion

   56 comparacion: expresion comparador expresion

   57 comparador: MENOR_IGUAL
   58           | MAYOR_IGUAL
   59           | MENOR
   60           | MAYOR
   61           | DIFF
   62           | IGUAL

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 13 22 24 33 36 37 50 63 64
CTE_S (259) 15 23
CTE_E (260) 34 51 63
CTE_R (261) 35 52
GET (262) 24
DISPLAY (263) 22 23
EQUMAX (264) 25 26 27
EQUMIN (265) 28 29 30
FOR (266) 27 30 63 64
WHILE (267) 18 26 29
THEN (268) 18 19 20
IF (269) 19 20 25 28
ELSE (270) 20
NOT (271)
AND (272) 54
OR (273) 55
OP_ASIG (274) 13
COMA (275) 32 37 39
PYC (276) 25 26 27 28 29 30
OP_SUM (277) 44
OP_RESTA (278) 45
OP_MULT (279) 47
OP_DIV (280) 48
CORCHA (281) 21 25 26 27 28 29 30 63 64
CORCHC (282) 21 25 26 27 28 29 30 63 64
PARA (283) 25 26 27 28 29 30 49
PARC (284) 25 26 27 28 29 30 49
LLAVEA (285)
LLAVEC (286)
MENOR_IGUAL (287) 57
MAYOR_IGUAL (288) 58
MENOR (289) 59
MAYOR (290) 60
DIFF (291) 61
IGUAL (292) 62
IGUALFOR (293) 63 64
DIM (294) 21
AS (295) 21
TO (296) 63 64
NEXT (297) 63 64
INTEGER (298) 40
STRING (299) 41
REAL (300) 42


No terminales con las reglas donde aparecen

$accept (46)
    en la izquierda: 0
inicio (47)
    en la izquierda: 1, en la derecha: 0
programa (48)
    en la izquierda: 2 3, en la derecha: 1 3 18 19 20
sentencia (49)
    en la izquierda: 4 5 6 7 8 9 10 11, en la derecha: 2 3
asignacion (50)
    en la izquierda: 13, en la derecha: 4
$@1 (51)
    en la izquierda: 12, en la derecha: 13
tipoAsig (52)
    en la izquierda: 14 15, en la derecha: 13
iteracion (53)
    en la izquierda: 16 17, en la derecha: 5
while (54)
    en la izquierda: 18, en la derecha: 16
seleccion (55)
    en la izquierda: 19 20, en la derecha: 6
declaracion (56)
    en la izquierda: 21, en la derecha: 7
display (57)
    en la izquierda: 22 23, en la derecha: 8
get (58)
    en la izquierda: 24, en la derecha: 9
equmax (59)
    en la izquierda: 25 26 27, en la derecha: 10
equmin (60)
    en la izquierda: 28 29 30, en la derecha: 11
listaEqu (61)
    en la izquierda: 31 32, en la derecha: 25 26 27 28 29 30 32
itemEqu (62)
    en la izquierda: 33 34 35, en la derecha: 31 32
listaVarDec (63)
    en la izquierda: 36 37, en la derecha: 21 37
listaType (64)
    en la izquierda: 38 39, en la derecha: 21 39
TYPE (65)
    en la izquierda: 40 41 42, en la derecha: 38 39
expresion (66)
    en la izquierda: 43 44 45, en la derecha: 14 25 26 27 28 29 30
    44 45 49 56 63 64
termino (67)
    en la izquierda: 46 47 48, en la derecha: 43 44 45 47 48
factor (68)
    en la izquierda: 49 50 51 52, en la derecha: 46 47 48
condicion (69)
    en la izquierda: 53 54 55, en la derecha: 18 19 20 54 55
comparacion (70)
    en la izquierda: 56, en la derecha: 53 54 55
comparador (71)
    en la izquierda: 57 58 59 60 61 62, en la derecha: 56
for (72)
    en la izquierda: 63 64, en la derecha: 17


estado 0

    0 $accept: . inicio $end

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    inicio       ir al estado 8
    programa     ir al estado 9
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19
    for          ir al estado 20


estado 1

   13 asignacion: ID . $@1 OP_ASIG tipoAsig

    $default  reduce usando la regla 12 ($@1)

    $@1  ir al estado 21


estado 2

   24 get: GET . ID

    ID  desplazar e ir al estado 22


estado 3

   22 display: DISPLAY . ID
   23        | DISPLAY . CTE_S

    ID     desplazar e ir al estado 23
    CTE_S  desplazar e ir al estado 24


estado 4

   27 equmax: FOR . EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   30 equmin: FOR . EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC
   63 for: FOR . ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR . ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID

    ID      desplazar e ir al estado 25
    EQUMAX  desplazar e ir al estado 26
    EQUMIN  desplazar e ir al estado 27


estado 5

   18 while: WHILE . condicion THEN programa
   26 equmax: WHILE . EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   29 equmin: WHILE . EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

    ID      desplazar e ir al estado 28
    CTE_E   desplazar e ir al estado 29
    CTE_R   desplazar e ir al estado 30
    EQUMAX  desplazar e ir al estado 31
    EQUMIN  desplazar e ir al estado 32
    PARA    desplazar e ir al estado 33

    expresion    ir al estado 34
    termino      ir al estado 35
    factor       ir al estado 36
    condicion    ir al estado 37
    comparacion  ir al estado 38


estado 6

   19 seleccion: IF . condicion THEN programa
   20          | IF . condicion THEN programa ELSE programa
   25 equmax: IF . EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   28 equmin: IF . EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

    ID      desplazar e ir al estado 28
    CTE_E   desplazar e ir al estado 29
    CTE_R   desplazar e ir al estado 30
    EQUMAX  desplazar e ir al estado 39
    EQUMIN  desplazar e ir al estado 40
    PARA    desplazar e ir al estado 33

    expresion    ir al estado 34
    termino      ir al estado 35
    factor       ir al estado 36
    condicion    ir al estado 41
    comparacion  ir al estado 38


estado 7

   21 declaracion: DIM . CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 42


estado 8

    0 $accept: inicio . $end

    $end  desplazar e ir al estado 43


estado 9

    1 inicio: programa .
    3 programa: programa . sentencia

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    $default  reduce usando la regla 1 (inicio)

    sentencia    ir al estado 44
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19
    for          ir al estado 20


estado 10

    2 programa: sentencia .

    $default  reduce usando la regla 2 (programa)


estado 11

    4 sentencia: asignacion .

    $default  reduce usando la regla 4 (sentencia)


estado 12

    5 sentencia: iteracion .

    $default  reduce usando la regla 5 (sentencia)


estado 13

   16 iteracion: while .

    $default  reduce usando la regla 16 (iteracion)


estado 14

    6 sentencia: seleccion .

    $default  reduce usando la regla 6 (sentencia)


estado 15

    7 sentencia: declaracion .

    $default  reduce usando la regla 7 (sentencia)


estado 16

    8 sentencia: display .

    $default  reduce usando la regla 8 (sentencia)


estado 17

    9 sentencia: get .

    $default  reduce usando la regla 9 (sentencia)


estado 18

   10 sentencia: equmax .

    $default  reduce usando la regla 10 (sentencia)


estado 19

   11 sentencia: equmin .

    $default  reduce usando la regla 11 (sentencia)


estado 20

   17 iteracion: for .

    $default  reduce usando la regla 17 (iteracion)


estado 21

   13 asignacion: ID $@1 . OP_ASIG tipoAsig

    OP_ASIG  desplazar e ir al estado 45


estado 22

   24 get: GET ID .

    $default  reduce usando la regla 24 (get)


estado 23

   22 display: DISPLAY ID .

    $default  reduce usando la regla 22 (display)


estado 24

   23 display: DISPLAY CTE_S .

    $default  reduce usando la regla 23 (display)


estado 25

   63 for: FOR ID . IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID . IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID

    IGUALFOR  desplazar e ir al estado 46


estado 26

   27 equmax: FOR EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 47


estado 27

   30 equmin: FOR EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 48


estado 28

   50 factor: ID .

    $default  reduce usando la regla 50 (factor)


estado 29

   51 factor: CTE_E .

    $default  reduce usando la regla 51 (factor)


estado 30

   52 factor: CTE_R .

    $default  reduce usando la regla 52 (factor)


estado 31

   26 equmax: WHILE EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 49


estado 32

   29 equmin: WHILE EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 50


estado 33

   49 factor: PARA . expresion PARC

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 51
    termino    ir al estado 35
    factor     ir al estado 36


estado 34

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   56 comparacion: expresion . comparador expresion

    OP_SUM       desplazar e ir al estado 52
    OP_RESTA     desplazar e ir al estado 53
    MENOR_IGUAL  desplazar e ir al estado 54
    MAYOR_IGUAL  desplazar e ir al estado 55
    MENOR        desplazar e ir al estado 56
    MAYOR        desplazar e ir al estado 57
    DIFF         desplazar e ir al estado 58
    IGUAL        desplazar e ir al estado 59

    comparador  ir al estado 60


estado 35

   43 expresion: termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 61
    OP_DIV   desplazar e ir al estado 62

    $default  reduce usando la regla 43 (expresion)


estado 36

   46 termino: factor .

    $default  reduce usando la regla 46 (termino)


estado 37

   18 while: WHILE condicion . THEN programa
   54 condicion: condicion . AND comparacion
   55          | condicion . OR comparacion

    THEN  desplazar e ir al estado 63
    AND   desplazar e ir al estado 64
    OR    desplazar e ir al estado 65


estado 38

   53 condicion: comparacion .

    $default  reduce usando la regla 53 (condicion)


estado 39

   25 equmax: IF EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 66


estado 40

   28 equmin: IF EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 67


estado 41

   19 seleccion: IF condicion . THEN programa
   20          | IF condicion . THEN programa ELSE programa
   54 condicion: condicion . AND comparacion
   55          | condicion . OR comparacion

    THEN  desplazar e ir al estado 68
    AND   desplazar e ir al estado 64
    OR    desplazar e ir al estado 65


estado 42

   21 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID  desplazar e ir al estado 69

    listaVarDec  ir al estado 70


estado 43

    0 $accept: inicio $end .

    $default  aceptar


estado 44

    3 programa: programa sentencia .

    $default  reduce usando la regla 3 (programa)


estado 45

   13 asignacion: ID $@1 OP_ASIG . tipoAsig

    ID     desplazar e ir al estado 28
    CTE_S  desplazar e ir al estado 71
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    tipoAsig   ir al estado 72
    expresion  ir al estado 73
    termino    ir al estado 35
    factor     ir al estado 36


estado 46

   63 for: FOR ID IGUALFOR . expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR . expresion TO expresion CORCHA CORCHC NEXT ID

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 74
    termino    ir al estado 35
    factor     ir al estado 36


estado 47

   27 equmax: FOR EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 75
    termino    ir al estado 35
    factor     ir al estado 36


estado 48

   30 equmin: FOR EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 76
    termino    ir al estado 35
    factor     ir al estado 36


estado 49

   26 equmax: WHILE EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 77
    termino    ir al estado 35
    factor     ir al estado 36


estado 50

   29 equmin: WHILE EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 78
    termino    ir al estado 35
    factor     ir al estado 36


estado 51

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   49 factor: PARA expresion . PARC

    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53
    PARC      desplazar e ir al estado 79


estado 52

   44 expresion: expresion OP_SUM . termino

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    termino  ir al estado 80
    factor   ir al estado 36


estado 53

   45 expresion: expresion OP_RESTA . termino

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    termino  ir al estado 81
    factor   ir al estado 36


estado 54

   57 comparador: MENOR_IGUAL .

    $default  reduce usando la regla 57 (comparador)


estado 55

   58 comparador: MAYOR_IGUAL .

    $default  reduce usando la regla 58 (comparador)


estado 56

   59 comparador: MENOR .

    $default  reduce usando la regla 59 (comparador)


estado 57

   60 comparador: MAYOR .

    $default  reduce usando la regla 60 (comparador)


estado 58

   61 comparador: DIFF .

    $default  reduce usando la regla 61 (comparador)


estado 59

   62 comparador: IGUAL .

    $default  reduce usando la regla 62 (comparador)


estado 60

   56 comparacion: expresion comparador . expresion

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 82
    termino    ir al estado 35
    factor     ir al estado 36


estado 61

   47 termino: termino OP_MULT . factor

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    factor  ir al estado 83


estado 62

   48 termino: termino OP_DIV . factor

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    factor  ir al estado 84


estado 63

   18 while: WHILE condicion THEN . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 85
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19
    for          ir al estado 20


estado 64

   54 condicion: condicion AND . comparacion

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion    ir al estado 34
    termino      ir al estado 35
    factor       ir al estado 36
    comparacion  ir al estado 86


estado 65

   55 condicion: condicion OR . comparacion

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion    ir al estado 34
    termino      ir al estado 35
    factor       ir al estado 36
    comparacion  ir al estado 87


estado 66

   25 equmax: IF EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 88
    termino    ir al estado 35
    factor     ir al estado 36


estado 67

   28 equmin: IF EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 89
    termino    ir al estado 35
    factor     ir al estado 36


estado 68

   19 seleccion: IF condicion THEN . programa
   20          | IF condicion THEN . programa ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 90
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19
    for          ir al estado 20


estado 69

   36 listaVarDec: ID .

    $default  reduce usando la regla 36 (listaVarDec)


estado 70

   21 declaracion: DIM CORCHA listaVarDec . CORCHC AS CORCHA listaType CORCHC
   37 listaVarDec: listaVarDec . COMA ID

    COMA    desplazar e ir al estado 91
    CORCHC  desplazar e ir al estado 92


estado 71

   15 tipoAsig: CTE_S .

    $default  reduce usando la regla 15 (tipoAsig)


estado 72

   13 asignacion: ID $@1 OP_ASIG tipoAsig .

    $default  reduce usando la regla 13 (asignacion)


estado 73

   14 tipoAsig: expresion .
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53

    $default  reduce usando la regla 14 (tipoAsig)


estado 74

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   63 for: FOR ID IGUALFOR expresion . TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion . TO expresion CORCHA CORCHC NEXT ID

    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53
    TO        desplazar e ir al estado 93


estado 75

   27 equmax: FOR EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 94
    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53


estado 76

   30 equmin: FOR EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 95
    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53


estado 77

   26 equmax: WHILE EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 96
    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53


estado 78

   29 equmin: WHILE EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 97
    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53


estado 79

   49 factor: PARA expresion PARC .

    $default  reduce usando la regla 49 (factor)


estado 80

   44 expresion: expresion OP_SUM termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 61
    OP_DIV   desplazar e ir al estado 62

    $default  reduce usando la regla 44 (expresion)


estado 81

   45 expresion: expresion OP_RESTA termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 61
    OP_DIV   desplazar e ir al estado 62

    $default  reduce usando la regla 45 (expresion)


estado 82

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   56 comparacion: expresion comparador expresion .

    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53

    $default  reduce usando la regla 56 (comparacion)


estado 83

   47 termino: termino OP_MULT factor .

    $default  reduce usando la regla 47 (termino)


estado 84

   48 termino: termino OP_DIV factor .

    $default  reduce usando la regla 48 (termino)


estado 85

    3 programa: programa . sentencia
   18 while: WHILE condicion THEN programa .

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    ID        [reduce usando la regla 18 (while)]
    GET       [reduce usando la regla 18 (while)]
    DISPLAY   [reduce usando la regla 18 (while)]
    FOR       [reduce usando la regla 18 (while)]
    WHILE     [reduce usando la regla 18 (while)]
    IF        [reduce usando la regla 18 (while)]
    DIM       [reduce usando la regla 18 (while)]
    $default  reduce usando la regla 18 (while)

    sentencia    ir al estado 44
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19
    for          ir al estado 20


estado 86

   54 condicion: condicion AND comparacion .

    $default  reduce usando la regla 54 (condicion)


estado 87

   55 condicion: condicion OR comparacion .

    $default  reduce usando la regla 55 (condicion)


estado 88

   25 equmax: IF EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 98
    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53


estado 89

   28 equmin: IF EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 99
    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53


estado 90

    3 programa: programa . sentencia
   19 seleccion: IF condicion THEN programa .
   20          | IF condicion THEN programa . ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    ELSE     desplazar e ir al estado 100
    DIM      desplazar e ir al estado 7

    ID        [reduce usando la regla 19 (seleccion)]
    GET       [reduce usando la regla 19 (seleccion)]
    DISPLAY   [reduce usando la regla 19 (seleccion)]
    FOR       [reduce usando la regla 19 (seleccion)]
    WHILE     [reduce usando la regla 19 (seleccion)]
    IF        [reduce usando la regla 19 (seleccion)]
    ELSE      [reduce usando la regla 19 (seleccion)]
    DIM       [reduce usando la regla 19 (seleccion)]
    $default  reduce usando la regla 19 (seleccion)

    sentencia    ir al estado 44
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19
    for          ir al estado 20


estado 91

   37 listaVarDec: listaVarDec COMA . ID

    ID  desplazar e ir al estado 101


estado 92

   21 declaracion: DIM CORCHA listaVarDec CORCHC . AS CORCHA listaType CORCHC

    AS  desplazar e ir al estado 102


estado 93

   63 for: FOR ID IGUALFOR expresion TO . expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO . expresion CORCHA CORCHC NEXT ID

    ID     desplazar e ir al estado 28
    CTE_E  desplazar e ir al estado 29
    CTE_R  desplazar e ir al estado 30
    PARA   desplazar e ir al estado 33

    expresion  ir al estado 103
    termino    ir al estado 35
    factor     ir al estado 36


estado 94

   27 equmax: FOR EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 104


estado 95

   30 equmin: FOR EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 105


estado 96

   26 equmax: WHILE EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 106


estado 97

   29 equmin: WHILE EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 107


estado 98

   25 equmax: IF EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 108


estado 99

   28 equmin: IF EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 109


estado 100

   20 seleccion: IF condicion THEN programa ELSE . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 110
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19
    for          ir al estado 20


estado 101

   37 listaVarDec: listaVarDec COMA ID .

    $default  reduce usando la regla 37 (listaVarDec)


estado 102

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS . CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 111


estado 103

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   63 for: FOR ID IGUALFOR expresion TO expresion . CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion . CORCHA CORCHC NEXT ID

    OP_SUM    desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53
    CORCHA    desplazar e ir al estado 112


estado 104

   27 equmax: FOR EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 113
    CTE_E  desplazar e ir al estado 114
    CTE_R  desplazar e ir al estado 115

    listaEqu  ir al estado 116
    itemEqu   ir al estado 117


estado 105

   30 equmin: FOR EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 113
    CTE_E  desplazar e ir al estado 114
    CTE_R  desplazar e ir al estado 115

    listaEqu  ir al estado 118
    itemEqu   ir al estado 117


estado 106

   26 equmax: WHILE EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 113
    CTE_E  desplazar e ir al estado 114
    CTE_R  desplazar e ir al estado 115

    listaEqu  ir al estado 119
    itemEqu   ir al estado 117


estado 107

   29 equmin: WHILE EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 113
    CTE_E  desplazar e ir al estado 114
    CTE_R  desplazar e ir al estado 115

    listaEqu  ir al estado 120
    itemEqu   ir al estado 117


estado 108

   25 equmax: IF EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 113
    CTE_E  desplazar e ir al estado 114
    CTE_R  desplazar e ir al estado 115

    listaEqu  ir al estado 121
    itemEqu   ir al estado 117


estado 109

   28 equmin: IF EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 113
    CTE_E  desplazar e ir al estado 114
    CTE_R  desplazar e ir al estado 115

    listaEqu  ir al estado 122
    itemEqu   ir al estado 117


estado 110

    3 programa: programa . sentencia
   20 seleccion: IF condicion THEN programa ELSE programa .

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    ID        [reduce usando la regla 20 (seleccion)]
    GET       [reduce usando la regla 20 (seleccion)]
    DISPLAY   [reduce usando la regla 20 (seleccion)]
    FOR       [reduce usando la regla 20 (seleccion)]
    WHILE     [reduce usando la regla 20 (seleccion)]
    IF        [reduce usando la regla 20 (seleccion)]
    DIM       [reduce usando la regla 20 (seleccion)]
    $default  reduce usando la regla 20 (seleccion)

    sentencia    ir al estado 44
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19
    for          ir al estado 20


estado 111

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA . listaType CORCHC

    INTEGER  desplazar e ir al estado 123
    STRING   desplazar e ir al estado 124
    REAL     desplazar e ir al estado 125

    listaType  ir al estado 126
    TYPE       ir al estado 127


estado 112

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA . CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion CORCHA . CORCHC NEXT ID

    CTE_E   desplazar e ir al estado 128
    CORCHC  desplazar e ir al estado 129


estado 113

   33 itemEqu: ID .

    $default  reduce usando la regla 33 (itemEqu)


estado 114

   34 itemEqu: CTE_E .

    $default  reduce usando la regla 34 (itemEqu)


estado 115

   35 itemEqu: CTE_R .

    $default  reduce usando la regla 35 (itemEqu)


estado 116

   27 equmax: FOR EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 130
    CORCHC  desplazar e ir al estado 131


estado 117

   31 listaEqu: itemEqu .

    $default  reduce usando la regla 31 (listaEqu)


estado 118

   30 equmin: FOR EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 130
    CORCHC  desplazar e ir al estado 132


estado 119

   26 equmax: WHILE EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 130
    CORCHC  desplazar e ir al estado 133


estado 120

   29 equmin: WHILE EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 130
    CORCHC  desplazar e ir al estado 134


estado 121

   25 equmax: IF EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 130
    CORCHC  desplazar e ir al estado 135


estado 122

   28 equmin: IF EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 130
    CORCHC  desplazar e ir al estado 136


estado 123

   40 TYPE: INTEGER .

    $default  reduce usando la regla 40 (TYPE)


estado 124

   41 TYPE: STRING .

    $default  reduce usando la regla 41 (TYPE)


estado 125

   42 TYPE: REAL .

    $default  reduce usando la regla 42 (TYPE)


estado 126

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   39 listaType: listaType . COMA TYPE

    COMA    desplazar e ir al estado 137
    CORCHC  desplazar e ir al estado 138


estado 127

   38 listaType: TYPE .

    $default  reduce usando la regla 38 (listaType)


estado 128

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E . CORCHC NEXT ID

    CORCHC  desplazar e ir al estado 139


estado 129

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC . NEXT ID

    NEXT  desplazar e ir al estado 140


estado 130

   32 listaEqu: listaEqu COMA . itemEqu

    ID     desplazar e ir al estado 113
    CTE_E  desplazar e ir al estado 114
    CTE_R  desplazar e ir al estado 115

    itemEqu  ir al estado 141


estado 131

   27 equmax: FOR EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 142


estado 132

   30 equmin: FOR EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 143


estado 133

   26 equmax: WHILE EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 144


estado 134

   29 equmin: WHILE EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 145


estado 135

   25 equmax: IF EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 146


estado 136

   28 equmin: IF EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 147


estado 137

   39 listaType: listaType COMA . TYPE

    INTEGER  desplazar e ir al estado 123
    STRING   desplazar e ir al estado 124
    REAL     desplazar e ir al estado 125

    TYPE  ir al estado 148


estado 138

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC .

    $default  reduce usando la regla 21 (declaracion)


estado 139

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC . NEXT ID

    NEXT  desplazar e ir al estado 149


estado 140

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT . ID

    ID  desplazar e ir al estado 150


estado 141

   32 listaEqu: listaEqu COMA itemEqu .

    $default  reduce usando la regla 32 (listaEqu)


estado 142

   27 equmax: FOR EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 27 (equmax)


estado 143

   30 equmin: FOR EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 30 (equmin)


estado 144

   26 equmax: WHILE EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 26 (equmax)


estado 145

   29 equmin: WHILE EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 29 (equmin)


estado 146

   25 equmax: IF EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 25 (equmax)


estado 147

   28 equmin: IF EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 28 (equmin)


estado 148

   39 listaType: listaType COMA TYPE .

    $default  reduce usando la regla 39 (listaType)


estado 149

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT . ID

    ID  desplazar e ir al estado 151


estado 150

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID .

    $default  reduce usando la regla 64 (for)


estado 151

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID .

    $default  reduce usando la regla 63 (for)
