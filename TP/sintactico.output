Terminals unused in grammar

   LLAVEA
   LLAVEC


Grammar

    0 $accept: inicio $end

    1 inicio: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | iteracion
    6          | seleccion
    7          | declaracion
    8          | display
    9          | get

   10 asignacion: ID OP_ASIG expresion
   11           | ID OP_ASIG CTE_S

   12 iteracion: while
   13          | for

   14 $@1: /* empty */

   15 $@2: /* empty */

   16 while: WHILE condicion $@1 BEGINW programa $@2 ENDW

   17 seleccion: IF condicion THEN programa ENDIF

   18 $@3: /* empty */

   19 $@4: /* empty */

   20 seleccion: IF condicion THEN programa $@3 ELSE $@4 programa ENDIF

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

   22 display: DISPLAY ID
   23        | DISPLAY CTE_S

   24 get: GET ID

   25 $@5: /* empty */

   26 $@6: /* empty */

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA listaEqu CORCHC PARC

   28 $@7: /* empty */

   29 $@8: /* empty */

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA listaEqu CORCHC PARC

   31 listaEqu: itemEqu
   32         | listaEqu COMA itemEqu

   33 itemEqu: ID
   34        | CTE_E
   35        | CTE_R

   36 listaVarDec: ID
   37            | listaVarDec COMA ID

   38 listaType: TYPE
   39          | listaType COMA TYPE

   40 TYPE: INTEGER
   41     | STRING
   42     | REAL

   43 expresion: termino
   44          | expresion OP_SUM termino
   45          | expresion OP_RESTA termino

   46 termino: factor
   47        | termino OP_MULT factor
   48        | termino OP_DIV factor

   49 factor: PARA expresion PARC
   50       | ID
   51       | CTE_E
   52       | CTE_R

   53 condicion: comparacion
   54          | NOT comparacion
   55          | comparacion AND comparacion
   56          | comparacion OR comparacion

   57 $@9: /* empty */

   58 comparacion: expresion $@9 comparador expresion
   59            | equmax
   60            | equmin

   61 comparador: MENOR_IGUAL
   62           | MAYOR_IGUAL
   63           | MENOR
   64           | MAYOR
   65           | DIFF
   66           | IGUAL

   67 $@10: /* empty */

   68 $@11: /* empty */

   69 $@12: /* empty */

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID

   71 salto: CORCHA CORCHC
   72      | CORCHA CTE_E CORCHC


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 10 11 22 24 33 36 37 50 70
CTE_S (259) 11 23
CTE_E (260) 34 51 72
CTE_R (261) 35 52
GET (262) 24
DISPLAY (263) 22 23
EQUMAX (264) 27
EQUMIN (265) 30
FOR (266) 70
WHILE (267) 16
BEGINW (268) 16
ENDW (269) 16
THEN (270) 17 20
IF (271) 17 20
ELSE (272) 20
ENDIF (273) 17 20
NOT (274) 54
AND (275) 55
OR (276) 56
OP_ASIG (277) 10 11
COMA (278) 32 37 39
PYC (279) 27 30
OP_SUM (280) 44
OP_RESTA (281) 45
OP_MULT (282) 47
OP_DIV (283) 48
CORCHA (284) 21 27 30 71 72
CORCHC (285) 21 27 30 71 72
PARA (286) 27 30 49
PARC (287) 27 30 49
LLAVEA (288)
LLAVEC (289)
MENOR_IGUAL (290) 61
MAYOR_IGUAL (291) 62
MENOR (292) 63
MAYOR (293) 64
DIFF (294) 65
IGUAL (295) 66
IGUALFOR (296) 70
DIM (297) 21
AS (298) 21
TO (299) 70
NEXT (300) 70
INTEGER (301) 40
STRING (302) 41
REAL (303) 42


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
inicio (50)
    on left: 1, on right: 0
programa (51)
    on left: 2 3, on right: 1 3 16 17 20 70
sentencia (52)
    on left: 4 5 6 7 8 9, on right: 2 3
asignacion (53)
    on left: 10 11, on right: 4
iteracion (54)
    on left: 12 13, on right: 5
while (55)
    on left: 16, on right: 12
$@1 (56)
    on left: 14, on right: 16
$@2 (57)
    on left: 15, on right: 16
seleccion (58)
    on left: 17 20, on right: 6
$@3 (59)
    on left: 18, on right: 20
$@4 (60)
    on left: 19, on right: 20
declaracion (61)
    on left: 21, on right: 7
display (62)
    on left: 22 23, on right: 8
get (63)
    on left: 24, on right: 9
equmax (64)
    on left: 27, on right: 59
$@5 (65)
    on left: 25, on right: 27
$@6 (66)
    on left: 26, on right: 27
equmin (67)
    on left: 30, on right: 60
$@7 (68)
    on left: 28, on right: 30
$@8 (69)
    on left: 29, on right: 30
listaEqu (70)
    on left: 31 32, on right: 27 30 32
itemEqu (71)
    on left: 33 34 35, on right: 31 32
listaVarDec (72)
    on left: 36 37, on right: 21 37
listaType (73)
    on left: 38 39, on right: 21 39
TYPE (74)
    on left: 40 41 42, on right: 38 39
expresion (75)
    on left: 43 44 45, on right: 10 27 30 44 45 49 58 70
termino (76)
    on left: 46 47 48, on right: 43 44 45 47 48
factor (77)
    on left: 49 50 51 52, on right: 46 47 48
condicion (78)
    on left: 53 54 55 56, on right: 16 17 20
comparacion (79)
    on left: 58 59 60, on right: 53 54 55 56
$@9 (80)
    on left: 57, on right: 58
comparador (81)
    on left: 61 62 63 64 65 66, on right: 58
for (82)
    on left: 70, on right: 13
$@10 (83)
    on left: 67, on right: 70
$@11 (84)
    on left: 68, on right: 70
$@12 (85)
    on left: 69, on right: 70
salto (86)
    on left: 71 72, on right: 70


state 0

    0 $accept: . inicio $end

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    DIM      shift, and go to state 7

    inicio       go to state 8
    programa     go to state 9
    sentencia    go to state 10
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 1

   10 asignacion: ID . OP_ASIG expresion
   11           | ID . OP_ASIG CTE_S

    OP_ASIG  shift, and go to state 19


state 2

   24 get: GET . ID

    ID  shift, and go to state 20


state 3

   22 display: DISPLAY . ID
   23        | DISPLAY . CTE_S

    ID     shift, and go to state 21
    CTE_S  shift, and go to state 22


state 4

   70 for: FOR . ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID

    ID  shift, and go to state 23


state 5

   16 while: WHILE . condicion $@1 BEGINW programa $@2 ENDW

    ID      shift, and go to state 24
    CTE_E   shift, and go to state 25
    CTE_R   shift, and go to state 26
    EQUMAX  shift, and go to state 27
    EQUMIN  shift, and go to state 28
    NOT     shift, and go to state 29
    PARA    shift, and go to state 30

    equmax       go to state 31
    equmin       go to state 32
    expresion    go to state 33
    termino      go to state 34
    factor       go to state 35
    condicion    go to state 36
    comparacion  go to state 37


state 6

   17 seleccion: IF . condicion THEN programa ENDIF
   20          | IF . condicion THEN programa $@3 ELSE $@4 programa ENDIF

    ID      shift, and go to state 24
    CTE_E   shift, and go to state 25
    CTE_R   shift, and go to state 26
    EQUMAX  shift, and go to state 27
    EQUMIN  shift, and go to state 28
    NOT     shift, and go to state 29
    PARA    shift, and go to state 30

    equmax       go to state 31
    equmin       go to state 32
    expresion    go to state 33
    termino      go to state 34
    factor       go to state 35
    condicion    go to state 38
    comparacion  go to state 37


state 7

   21 declaracion: DIM . CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

    CORCHA  shift, and go to state 39


state 8

    0 $accept: inicio . $end

    $end  shift, and go to state 40


state 9

    1 inicio: programa .
    3 programa: programa . sentencia

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    DIM      shift, and go to state 7

    $default  reduce using rule 1 (inicio)

    sentencia    go to state 41
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 10

    2 programa: sentencia .

    $default  reduce using rule 2 (programa)


state 11

    4 sentencia: asignacion .

    $default  reduce using rule 4 (sentencia)


state 12

    5 sentencia: iteracion .

    $default  reduce using rule 5 (sentencia)


state 13

   12 iteracion: while .

    $default  reduce using rule 12 (iteracion)


state 14

    6 sentencia: seleccion .

    $default  reduce using rule 6 (sentencia)


state 15

    7 sentencia: declaracion .

    $default  reduce using rule 7 (sentencia)


state 16

    8 sentencia: display .

    $default  reduce using rule 8 (sentencia)


state 17

    9 sentencia: get .

    $default  reduce using rule 9 (sentencia)


state 18

   13 iteracion: for .

    $default  reduce using rule 13 (iteracion)


state 19

   10 asignacion: ID OP_ASIG . expresion
   11           | ID OP_ASIG . CTE_S

    ID     shift, and go to state 24
    CTE_S  shift, and go to state 42
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    expresion  go to state 43
    termino    go to state 34
    factor     go to state 35


state 20

   24 get: GET ID .

    $default  reduce using rule 24 (get)


state 21

   22 display: DISPLAY ID .

    $default  reduce using rule 22 (display)


state 22

   23 display: DISPLAY CTE_S .

    $default  reduce using rule 23 (display)


state 23

   70 for: FOR ID . IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID

    IGUALFOR  shift, and go to state 44


state 24

   50 factor: ID .

    $default  reduce using rule 50 (factor)


state 25

   51 factor: CTE_E .

    $default  reduce using rule 51 (factor)


state 26

   52 factor: CTE_R .

    $default  reduce using rule 52 (factor)


state 27

   27 equmax: EQUMAX . $@5 PARA expresion $@6 PYC CORCHA listaEqu CORCHC PARC

    $default  reduce using rule 25 ($@5)

    $@5  go to state 45


state 28

   30 equmin: EQUMIN . $@7 PARA expresion $@8 PYC CORCHA listaEqu CORCHC PARC

    $default  reduce using rule 28 ($@7)

    $@7  go to state 46


state 29

   54 condicion: NOT . comparacion

    ID      shift, and go to state 24
    CTE_E   shift, and go to state 25
    CTE_R   shift, and go to state 26
    EQUMAX  shift, and go to state 27
    EQUMIN  shift, and go to state 28
    PARA    shift, and go to state 30

    equmax       go to state 31
    equmin       go to state 32
    expresion    go to state 33
    termino      go to state 34
    factor       go to state 35
    comparacion  go to state 47


state 30

   49 factor: PARA . expresion PARC

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    expresion  go to state 48
    termino    go to state 34
    factor     go to state 35


state 31

   59 comparacion: equmax .

    $default  reduce using rule 59 (comparacion)


state 32

   60 comparacion: equmin .

    $default  reduce using rule 60 (comparacion)


state 33

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   58 comparacion: expresion . $@9 comparador expresion

    OP_SUM    shift, and go to state 49
    OP_RESTA  shift, and go to state 50

    $default  reduce using rule 57 ($@9)

    $@9  go to state 51


state 34

   43 expresion: termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  shift, and go to state 52
    OP_DIV   shift, and go to state 53

    $default  reduce using rule 43 (expresion)


state 35

   46 termino: factor .

    $default  reduce using rule 46 (termino)


state 36

   16 while: WHILE condicion . $@1 BEGINW programa $@2 ENDW

    $default  reduce using rule 14 ($@1)

    $@1  go to state 54


state 37

   53 condicion: comparacion .
   55          | comparacion . AND comparacion
   56          | comparacion . OR comparacion

    AND  shift, and go to state 55
    OR   shift, and go to state 56

    $default  reduce using rule 53 (condicion)


state 38

   17 seleccion: IF condicion . THEN programa ENDIF
   20          | IF condicion . THEN programa $@3 ELSE $@4 programa ENDIF

    THEN  shift, and go to state 57


state 39

   21 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID  shift, and go to state 58

    listaVarDec  go to state 59


state 40

    0 $accept: inicio $end .

    $default  accept


state 41

    3 programa: programa sentencia .

    $default  reduce using rule 3 (programa)


state 42

   11 asignacion: ID OP_ASIG CTE_S .

    $default  reduce using rule 11 (asignacion)


state 43

   10 asignacion: ID OP_ASIG expresion .
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    OP_SUM    shift, and go to state 49
    OP_RESTA  shift, and go to state 50

    $default  reduce using rule 10 (asignacion)


state 44

   70 for: FOR ID IGUALFOR . expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    expresion  go to state 60
    termino    go to state 34
    factor     go to state 35


state 45

   27 equmax: EQUMAX $@5 . PARA expresion $@6 PYC CORCHA listaEqu CORCHC PARC

    PARA  shift, and go to state 61


state 46

   30 equmin: EQUMIN $@7 . PARA expresion $@8 PYC CORCHA listaEqu CORCHC PARC

    PARA  shift, and go to state 62


state 47

   54 condicion: NOT comparacion .

    $default  reduce using rule 54 (condicion)


state 48

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   49 factor: PARA expresion . PARC

    OP_SUM    shift, and go to state 49
    OP_RESTA  shift, and go to state 50
    PARC      shift, and go to state 63


state 49

   44 expresion: expresion OP_SUM . termino

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    termino  go to state 64
    factor   go to state 35


state 50

   45 expresion: expresion OP_RESTA . termino

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    termino  go to state 65
    factor   go to state 35


state 51

   58 comparacion: expresion $@9 . comparador expresion

    MENOR_IGUAL  shift, and go to state 66
    MAYOR_IGUAL  shift, and go to state 67
    MENOR        shift, and go to state 68
    MAYOR        shift, and go to state 69
    DIFF         shift, and go to state 70
    IGUAL        shift, and go to state 71

    comparador  go to state 72


state 52

   47 termino: termino OP_MULT . factor

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    factor  go to state 73


state 53

   48 termino: termino OP_DIV . factor

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    factor  go to state 74


state 54

   16 while: WHILE condicion $@1 . BEGINW programa $@2 ENDW

    BEGINW  shift, and go to state 75


state 55

   55 condicion: comparacion AND . comparacion

    ID      shift, and go to state 24
    CTE_E   shift, and go to state 25
    CTE_R   shift, and go to state 26
    EQUMAX  shift, and go to state 27
    EQUMIN  shift, and go to state 28
    PARA    shift, and go to state 30

    equmax       go to state 31
    equmin       go to state 32
    expresion    go to state 33
    termino      go to state 34
    factor       go to state 35
    comparacion  go to state 76


state 56

   56 condicion: comparacion OR . comparacion

    ID      shift, and go to state 24
    CTE_E   shift, and go to state 25
    CTE_R   shift, and go to state 26
    EQUMAX  shift, and go to state 27
    EQUMIN  shift, and go to state 28
    PARA    shift, and go to state 30

    equmax       go to state 31
    equmin       go to state 32
    expresion    go to state 33
    termino      go to state 34
    factor       go to state 35
    comparacion  go to state 77


state 57

   17 seleccion: IF condicion THEN . programa ENDIF
   20          | IF condicion THEN . programa $@3 ELSE $@4 programa ENDIF

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    DIM      shift, and go to state 7

    programa     go to state 78
    sentencia    go to state 10
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 58

   36 listaVarDec: ID .

    $default  reduce using rule 36 (listaVarDec)


state 59

   21 declaracion: DIM CORCHA listaVarDec . CORCHC AS CORCHA listaType CORCHC
   37 listaVarDec: listaVarDec . COMA ID

    COMA    shift, and go to state 79
    CORCHC  shift, and go to state 80


state 60

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   70 for: FOR ID IGUALFOR expresion . $@10 TO expresion $@11 salto $@12 programa NEXT ID

    OP_SUM    shift, and go to state 49
    OP_RESTA  shift, and go to state 50

    $default  reduce using rule 67 ($@10)

    $@10  go to state 81


state 61

   27 equmax: EQUMAX $@5 PARA . expresion $@6 PYC CORCHA listaEqu CORCHC PARC

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    expresion  go to state 82
    termino    go to state 34
    factor     go to state 35


state 62

   30 equmin: EQUMIN $@7 PARA . expresion $@8 PYC CORCHA listaEqu CORCHC PARC

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    expresion  go to state 83
    termino    go to state 34
    factor     go to state 35


state 63

   49 factor: PARA expresion PARC .

    $default  reduce using rule 49 (factor)


state 64

   44 expresion: expresion OP_SUM termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  shift, and go to state 52
    OP_DIV   shift, and go to state 53

    $default  reduce using rule 44 (expresion)


state 65

   45 expresion: expresion OP_RESTA termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  shift, and go to state 52
    OP_DIV   shift, and go to state 53

    $default  reduce using rule 45 (expresion)


state 66

   61 comparador: MENOR_IGUAL .

    $default  reduce using rule 61 (comparador)


state 67

   62 comparador: MAYOR_IGUAL .

    $default  reduce using rule 62 (comparador)


state 68

   63 comparador: MENOR .

    $default  reduce using rule 63 (comparador)


state 69

   64 comparador: MAYOR .

    $default  reduce using rule 64 (comparador)


state 70

   65 comparador: DIFF .

    $default  reduce using rule 65 (comparador)


state 71

   66 comparador: IGUAL .

    $default  reduce using rule 66 (comparador)


state 72

   58 comparacion: expresion $@9 comparador . expresion

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    expresion  go to state 84
    termino    go to state 34
    factor     go to state 35


state 73

   47 termino: termino OP_MULT factor .

    $default  reduce using rule 47 (termino)


state 74

   48 termino: termino OP_DIV factor .

    $default  reduce using rule 48 (termino)


state 75

   16 while: WHILE condicion $@1 BEGINW . programa $@2 ENDW

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    DIM      shift, and go to state 7

    programa     go to state 85
    sentencia    go to state 10
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 76

   55 condicion: comparacion AND comparacion .

    $default  reduce using rule 55 (condicion)


state 77

   56 condicion: comparacion OR comparacion .

    $default  reduce using rule 56 (condicion)


state 78

    3 programa: programa . sentencia
   17 seleccion: IF condicion THEN programa . ENDIF
   20          | IF condicion THEN programa . $@3 ELSE $@4 programa ENDIF

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    ENDIF    shift, and go to state 86
    DIM      shift, and go to state 7

    $default  reduce using rule 18 ($@3)

    sentencia    go to state 41
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    $@3          go to state 87
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 79

   37 listaVarDec: listaVarDec COMA . ID

    ID  shift, and go to state 88


state 80

   21 declaracion: DIM CORCHA listaVarDec CORCHC . AS CORCHA listaType CORCHC

    AS  shift, and go to state 89


state 81

   70 for: FOR ID IGUALFOR expresion $@10 . TO expresion $@11 salto $@12 programa NEXT ID

    TO  shift, and go to state 90


state 82

   27 equmax: EQUMAX $@5 PARA expresion . $@6 PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    OP_SUM    shift, and go to state 49
    OP_RESTA  shift, and go to state 50

    $default  reduce using rule 26 ($@6)

    $@6  go to state 91


state 83

   30 equmin: EQUMIN $@7 PARA expresion . $@8 PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    OP_SUM    shift, and go to state 49
    OP_RESTA  shift, and go to state 50

    $default  reduce using rule 29 ($@8)

    $@8  go to state 92


state 84

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   58 comparacion: expresion $@9 comparador expresion .

    OP_SUM    shift, and go to state 49
    OP_RESTA  shift, and go to state 50

    $default  reduce using rule 58 (comparacion)


state 85

    3 programa: programa . sentencia
   16 while: WHILE condicion $@1 BEGINW programa . $@2 ENDW

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    DIM      shift, and go to state 7

    $default  reduce using rule 15 ($@2)

    sentencia    go to state 41
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    $@2          go to state 93
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 86

   17 seleccion: IF condicion THEN programa ENDIF .

    $default  reduce using rule 17 (seleccion)


state 87

   20 seleccion: IF condicion THEN programa $@3 . ELSE $@4 programa ENDIF

    ELSE  shift, and go to state 94


state 88

   37 listaVarDec: listaVarDec COMA ID .

    $default  reduce using rule 37 (listaVarDec)


state 89

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS . CORCHA listaType CORCHC

    CORCHA  shift, and go to state 95


state 90

   70 for: FOR ID IGUALFOR expresion $@10 TO . expresion $@11 salto $@12 programa NEXT ID

    ID     shift, and go to state 24
    CTE_E  shift, and go to state 25
    CTE_R  shift, and go to state 26
    PARA   shift, and go to state 30

    expresion  go to state 96
    termino    go to state 34
    factor     go to state 35


state 91

   27 equmax: EQUMAX $@5 PARA expresion $@6 . PYC CORCHA listaEqu CORCHC PARC

    PYC  shift, and go to state 97


state 92

   30 equmin: EQUMIN $@7 PARA expresion $@8 . PYC CORCHA listaEqu CORCHC PARC

    PYC  shift, and go to state 98


state 93

   16 while: WHILE condicion $@1 BEGINW programa $@2 . ENDW

    ENDW  shift, and go to state 99


state 94

   20 seleccion: IF condicion THEN programa $@3 ELSE . $@4 programa ENDIF

    $default  reduce using rule 19 ($@4)

    $@4  go to state 100


state 95

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA . listaType CORCHC

    INTEGER  shift, and go to state 101
    STRING   shift, and go to state 102
    REAL     shift, and go to state 103

    listaType  go to state 104
    TYPE       go to state 105


state 96

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   70 for: FOR ID IGUALFOR expresion $@10 TO expresion . $@11 salto $@12 programa NEXT ID

    OP_SUM    shift, and go to state 49
    OP_RESTA  shift, and go to state 50

    $default  reduce using rule 68 ($@11)

    $@11  go to state 106


state 97

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  shift, and go to state 107


state 98

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  shift, and go to state 108


state 99

   16 while: WHILE condicion $@1 BEGINW programa $@2 ENDW .

    $default  reduce using rule 16 (while)


state 100

   20 seleccion: IF condicion THEN programa $@3 ELSE $@4 . programa ENDIF

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    DIM      shift, and go to state 7

    programa     go to state 109
    sentencia    go to state 10
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 101

   40 TYPE: INTEGER .

    $default  reduce using rule 40 (TYPE)


state 102

   41 TYPE: STRING .

    $default  reduce using rule 41 (TYPE)


state 103

   42 TYPE: REAL .

    $default  reduce using rule 42 (TYPE)


state 104

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   39 listaType: listaType . COMA TYPE

    COMA    shift, and go to state 110
    CORCHC  shift, and go to state 111


state 105

   38 listaType: TYPE .

    $default  reduce using rule 38 (listaType)


state 106

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 . salto $@12 programa NEXT ID

    CORCHA  shift, and go to state 112

    salto  go to state 113


state 107

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA . listaEqu CORCHC PARC

    ID     shift, and go to state 114
    CTE_E  shift, and go to state 115
    CTE_R  shift, and go to state 116

    listaEqu  go to state 117
    itemEqu   go to state 118


state 108

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA . listaEqu CORCHC PARC

    ID     shift, and go to state 114
    CTE_E  shift, and go to state 115
    CTE_R  shift, and go to state 116

    listaEqu  go to state 119
    itemEqu   go to state 118


state 109

    3 programa: programa . sentencia
   20 seleccion: IF condicion THEN programa $@3 ELSE $@4 programa . ENDIF

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    ENDIF    shift, and go to state 120
    DIM      shift, and go to state 7

    sentencia    go to state 41
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 110

   39 listaType: listaType COMA . TYPE

    INTEGER  shift, and go to state 101
    STRING   shift, and go to state 102
    REAL     shift, and go to state 103

    TYPE  go to state 121


state 111

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC .

    $default  reduce using rule 21 (declaracion)


state 112

   71 salto: CORCHA . CORCHC
   72      | CORCHA . CTE_E CORCHC

    CTE_E   shift, and go to state 122
    CORCHC  shift, and go to state 123


state 113

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto . $@12 programa NEXT ID

    $default  reduce using rule 69 ($@12)

    $@12  go to state 124


state 114

   33 itemEqu: ID .

    $default  reduce using rule 33 (itemEqu)


state 115

   34 itemEqu: CTE_E .

    $default  reduce using rule 34 (itemEqu)


state 116

   35 itemEqu: CTE_R .

    $default  reduce using rule 35 (itemEqu)


state 117

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    shift, and go to state 125
    CORCHC  shift, and go to state 126


state 118

   31 listaEqu: itemEqu .

    $default  reduce using rule 31 (listaEqu)


state 119

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    shift, and go to state 125
    CORCHC  shift, and go to state 127


state 120

   20 seleccion: IF condicion THEN programa $@3 ELSE $@4 programa ENDIF .

    $default  reduce using rule 20 (seleccion)


state 121

   39 listaType: listaType COMA TYPE .

    $default  reduce using rule 39 (listaType)


state 122

   72 salto: CORCHA CTE_E . CORCHC

    CORCHC  shift, and go to state 128


state 123

   71 salto: CORCHA CORCHC .

    $default  reduce using rule 71 (salto)


state 124

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 . programa NEXT ID

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    DIM      shift, and go to state 7

    programa     go to state 129
    sentencia    go to state 10
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 125

   32 listaEqu: listaEqu COMA . itemEqu

    ID     shift, and go to state 114
    CTE_E  shift, and go to state 115
    CTE_R  shift, and go to state 116

    itemEqu  go to state 130


state 126

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA listaEqu CORCHC . PARC

    PARC  shift, and go to state 131


state 127

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA listaEqu CORCHC . PARC

    PARC  shift, and go to state 132


state 128

   72 salto: CORCHA CTE_E CORCHC .

    $default  reduce using rule 72 (salto)


state 129

    3 programa: programa . sentencia
   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa . NEXT ID

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    FOR      shift, and go to state 4
    WHILE    shift, and go to state 5
    IF       shift, and go to state 6
    DIM      shift, and go to state 7
    NEXT     shift, and go to state 133

    sentencia    go to state 41
    asignacion   go to state 11
    iteracion    go to state 12
    while        go to state 13
    seleccion    go to state 14
    declaracion  go to state 15
    display      go to state 16
    get          go to state 17
    for          go to state 18


state 130

   32 listaEqu: listaEqu COMA itemEqu .

    $default  reduce using rule 32 (listaEqu)


state 131

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce using rule 27 (equmax)


state 132

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce using rule 30 (equmin)


state 133

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT . ID

    ID  shift, and go to state 134


state 134

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID .

    $default  reduce using rule 70 (for)
