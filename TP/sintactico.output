Terminals unused in grammar

   ENDIF
   LLAVEA
   LLAVEC


State 82 conflicts: 10 shift/reduce
State 101 conflicts: 9 shift/reduce


Grammar

    0 $accept: inicio $end

    1 inicio: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | iteracion
    6          | seleccion
    7          | declaracion
    8          | display
    9          | get
   10          | equmax
   11          | equmin

   12 asignacion: ID OP_ASIG expresion
   13           | ID OP_ASIG CTE_S

   14 iteracion: while
   15          | for

   16 $@1: /* empty */

   17 $@2: /* empty */

   18 while: WHILE condicion $@1 BEGINW programa $@2 ENDW

   19 seleccion: IF condicion THEN programa
   20          | IF condicion THEN programa ELSE programa

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

   22 display: DISPLAY ID
   23        | DISPLAY CTE_S

   24 get: GET ID

   25 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC

   26 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

   27 listaEqu: itemEqu
   28         | listaEqu COMA itemEqu

   29 itemEqu: ID
   30        | CTE_E
   31        | CTE_R

   32 listaVarDec: ID
   33            | listaVarDec COMA ID

   34 listaType: TYPE
   35          | listaType COMA TYPE

   36 TYPE: INTEGER
   37     | STRING
   38     | REAL

   39 expresion: termino
   40          | expresion OP_SUM termino
   41          | expresion OP_RESTA termino

   42 termino: factor
   43        | termino OP_MULT factor
   44        | termino OP_DIV factor

   45 factor: PARA expresion PARC
   46       | ID
   47       | CTE_E
   48       | CTE_R

   49 condicion: comparacion
   50          | NOT comparacion
   51          | comparacion AND comparacion
   52          | comparacion OR comparacion

   53 $@3: /* empty */

   54 comparacion: expresion $@3 comparador expresion
   55            | equmax
   56            | equmin

   57 comparador: MENOR_IGUAL
   58           | MAYOR_IGUAL
   59           | MENOR
   60           | MAYOR
   61           | DIFF
   62           | IGUAL

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 12 13 22 24 29 32 33 46 63 64
CTE_S (259) 13 23
CTE_E (260) 30 47 63
CTE_R (261) 31 48
GET (262) 24
DISPLAY (263) 22 23
EQUMAX (264) 25
EQUMIN (265) 26
FOR (266) 63 64
WHILE (267) 18
BEGINW (268) 18
ENDW (269) 18
THEN (270) 19 20
IF (271) 19 20
ELSE (272) 20
ENDIF (273)
NOT (274) 50
AND (275) 51
OR (276) 52
OP_ASIG (277) 12 13
COMA (278) 28 33 35
PYC (279) 25 26
OP_SUM (280) 40
OP_RESTA (281) 41
OP_MULT (282) 43
OP_DIV (283) 44
CORCHA (284) 21 25 26 63 64
CORCHC (285) 21 25 26 63 64
PARA (286) 25 26 45
PARC (287) 25 26 45
LLAVEA (288)
LLAVEC (289)
MENOR_IGUAL (290) 57
MAYOR_IGUAL (291) 58
MENOR (292) 59
MAYOR (293) 60
DIFF (294) 61
IGUAL (295) 62
IGUALFOR (296) 63 64
DIM (297) 21
AS (298) 21
TO (299) 63 64
NEXT (300) 63 64
INTEGER (301) 36
STRING (302) 37
REAL (303) 38


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
inicio (50)
    on left: 1, on right: 0
programa (51)
    on left: 2 3, on right: 1 3 18 19 20
sentencia (52)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
asignacion (53)
    on left: 12 13, on right: 4
iteracion (54)
    on left: 14 15, on right: 5
while (55)
    on left: 18, on right: 14
$@1 (56)
    on left: 16, on right: 18
$@2 (57)
    on left: 17, on right: 18
seleccion (58)
    on left: 19 20, on right: 6
declaracion (59)
    on left: 21, on right: 7
display (60)
    on left: 22 23, on right: 8
get (61)
    on left: 24, on right: 9
equmax (62)
    on left: 25, on right: 10 55
equmin (63)
    on left: 26, on right: 11 56
listaEqu (64)
    on left: 27 28, on right: 25 26 28
itemEqu (65)
    on left: 29 30 31, on right: 27 28
listaVarDec (66)
    on left: 32 33, on right: 21 33
listaType (67)
    on left: 34 35, on right: 21 35
TYPE (68)
    on left: 36 37 38, on right: 34 35
expresion (69)
    on left: 39 40 41, on right: 12 25 26 40 41 45 54 63 64
termino (70)
    on left: 42 43 44, on right: 39 40 41 43 44
factor (71)
    on left: 45 46 47 48, on right: 42 43 44
condicion (72)
    on left: 49 50 51 52, on right: 18 19 20
comparacion (73)
    on left: 54 55 56, on right: 49 50 51 52
$@3 (74)
    on left: 53, on right: 54
comparador (75)
    on left: 57 58 59 60 61 62, on right: 54
for (76)
    on left: 63 64, on right: 15


state 0

    0 $accept: . inicio $end

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    EQUMAX   shift, and go to state 4
    EQUMIN   shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    DIM      shift, and go to state 9

    inicio       go to state 10
    programa     go to state 11
    sentencia    go to state 12
    asignacion   go to state 13
    iteracion    go to state 14
    while        go to state 15
    seleccion    go to state 16
    declaracion  go to state 17
    display      go to state 18
    get          go to state 19
    equmax       go to state 20
    equmin       go to state 21
    for          go to state 22


state 1

   12 asignacion: ID . OP_ASIG expresion
   13           | ID . OP_ASIG CTE_S

    OP_ASIG  shift, and go to state 23


state 2

   24 get: GET . ID

    ID  shift, and go to state 24


state 3

   22 display: DISPLAY . ID
   23        | DISPLAY . CTE_S

    ID     shift, and go to state 25
    CTE_S  shift, and go to state 26


state 4

   25 equmax: EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  shift, and go to state 27


state 5

   26 equmin: EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  shift, and go to state 28


state 6

   63 for: FOR . ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR . ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID

    ID  shift, and go to state 29


state 7

   18 while: WHILE . condicion $@1 BEGINW programa $@2 ENDW

    ID      shift, and go to state 30
    CTE_E   shift, and go to state 31
    CTE_R   shift, and go to state 32
    EQUMAX  shift, and go to state 4
    EQUMIN  shift, and go to state 5
    NOT     shift, and go to state 33
    PARA    shift, and go to state 34

    equmax       go to state 35
    equmin       go to state 36
    expresion    go to state 37
    termino      go to state 38
    factor       go to state 39
    condicion    go to state 40
    comparacion  go to state 41


state 8

   19 seleccion: IF . condicion THEN programa
   20          | IF . condicion THEN programa ELSE programa

    ID      shift, and go to state 30
    CTE_E   shift, and go to state 31
    CTE_R   shift, and go to state 32
    EQUMAX  shift, and go to state 4
    EQUMIN  shift, and go to state 5
    NOT     shift, and go to state 33
    PARA    shift, and go to state 34

    equmax       go to state 35
    equmin       go to state 36
    expresion    go to state 37
    termino      go to state 38
    factor       go to state 39
    condicion    go to state 42
    comparacion  go to state 41


state 9

   21 declaracion: DIM . CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

    CORCHA  shift, and go to state 43


state 10

    0 $accept: inicio . $end

    $end  shift, and go to state 44


state 11

    1 inicio: programa .
    3 programa: programa . sentencia

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    EQUMAX   shift, and go to state 4
    EQUMIN   shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    DIM      shift, and go to state 9

    $default  reduce using rule 1 (inicio)

    sentencia    go to state 45
    asignacion   go to state 13
    iteracion    go to state 14
    while        go to state 15
    seleccion    go to state 16
    declaracion  go to state 17
    display      go to state 18
    get          go to state 19
    equmax       go to state 20
    equmin       go to state 21
    for          go to state 22


state 12

    2 programa: sentencia .

    $default  reduce using rule 2 (programa)


state 13

    4 sentencia: asignacion .

    $default  reduce using rule 4 (sentencia)


state 14

    5 sentencia: iteracion .

    $default  reduce using rule 5 (sentencia)


state 15

   14 iteracion: while .

    $default  reduce using rule 14 (iteracion)


state 16

    6 sentencia: seleccion .

    $default  reduce using rule 6 (sentencia)


state 17

    7 sentencia: declaracion .

    $default  reduce using rule 7 (sentencia)


state 18

    8 sentencia: display .

    $default  reduce using rule 8 (sentencia)


state 19

    9 sentencia: get .

    $default  reduce using rule 9 (sentencia)


state 20

   10 sentencia: equmax .

    $default  reduce using rule 10 (sentencia)


state 21

   11 sentencia: equmin .

    $default  reduce using rule 11 (sentencia)


state 22

   15 iteracion: for .

    $default  reduce using rule 15 (iteracion)


state 23

   12 asignacion: ID OP_ASIG . expresion
   13           | ID OP_ASIG . CTE_S

    ID     shift, and go to state 30
    CTE_S  shift, and go to state 46
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    expresion  go to state 47
    termino    go to state 38
    factor     go to state 39


state 24

   24 get: GET ID .

    $default  reduce using rule 24 (get)


state 25

   22 display: DISPLAY ID .

    $default  reduce using rule 22 (display)


state 26

   23 display: DISPLAY CTE_S .

    $default  reduce using rule 23 (display)


state 27

   25 equmax: EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    expresion  go to state 48
    termino    go to state 38
    factor     go to state 39


state 28

   26 equmin: EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    expresion  go to state 49
    termino    go to state 38
    factor     go to state 39


state 29

   63 for: FOR ID . IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID . IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID

    IGUALFOR  shift, and go to state 50


state 30

   46 factor: ID .

    $default  reduce using rule 46 (factor)


state 31

   47 factor: CTE_E .

    $default  reduce using rule 47 (factor)


state 32

   48 factor: CTE_R .

    $default  reduce using rule 48 (factor)


state 33

   50 condicion: NOT . comparacion

    ID      shift, and go to state 30
    CTE_E   shift, and go to state 31
    CTE_R   shift, and go to state 32
    EQUMAX  shift, and go to state 4
    EQUMIN  shift, and go to state 5
    PARA    shift, and go to state 34

    equmax       go to state 35
    equmin       go to state 36
    expresion    go to state 37
    termino      go to state 38
    factor       go to state 39
    comparacion  go to state 51


state 34

   45 factor: PARA . expresion PARC

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    expresion  go to state 52
    termino    go to state 38
    factor     go to state 39


state 35

   55 comparacion: equmax .

    $default  reduce using rule 55 (comparacion)


state 36

   56 comparacion: equmin .

    $default  reduce using rule 56 (comparacion)


state 37

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   54 comparacion: expresion . $@3 comparador expresion

    OP_SUM    shift, and go to state 53
    OP_RESTA  shift, and go to state 54

    $default  reduce using rule 53 ($@3)

    $@3  go to state 55


state 38

   39 expresion: termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  shift, and go to state 56
    OP_DIV   shift, and go to state 57

    $default  reduce using rule 39 (expresion)


state 39

   42 termino: factor .

    $default  reduce using rule 42 (termino)


state 40

   18 while: WHILE condicion . $@1 BEGINW programa $@2 ENDW

    $default  reduce using rule 16 ($@1)

    $@1  go to state 58


state 41

   49 condicion: comparacion .
   51          | comparacion . AND comparacion
   52          | comparacion . OR comparacion

    AND  shift, and go to state 59
    OR   shift, and go to state 60

    $default  reduce using rule 49 (condicion)


state 42

   19 seleccion: IF condicion . THEN programa
   20          | IF condicion . THEN programa ELSE programa

    THEN  shift, and go to state 61


state 43

   21 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID  shift, and go to state 62

    listaVarDec  go to state 63


state 44

    0 $accept: inicio $end .

    $default  accept


state 45

    3 programa: programa sentencia .

    $default  reduce using rule 3 (programa)


state 46

   13 asignacion: ID OP_ASIG CTE_S .

    $default  reduce using rule 13 (asignacion)


state 47

   12 asignacion: ID OP_ASIG expresion .
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    OP_SUM    shift, and go to state 53
    OP_RESTA  shift, and go to state 54

    $default  reduce using rule 12 (asignacion)


state 48

   25 equmax: EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       shift, and go to state 64
    OP_SUM    shift, and go to state 53
    OP_RESTA  shift, and go to state 54


state 49

   26 equmin: EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       shift, and go to state 65
    OP_SUM    shift, and go to state 53
    OP_RESTA  shift, and go to state 54


state 50

   63 for: FOR ID IGUALFOR . expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR . expresion TO expresion CORCHA CORCHC NEXT ID

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    expresion  go to state 66
    termino    go to state 38
    factor     go to state 39


state 51

   50 condicion: NOT comparacion .

    $default  reduce using rule 50 (condicion)


state 52

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   45 factor: PARA expresion . PARC

    OP_SUM    shift, and go to state 53
    OP_RESTA  shift, and go to state 54
    PARC      shift, and go to state 67


state 53

   40 expresion: expresion OP_SUM . termino

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    termino  go to state 68
    factor   go to state 39


state 54

   41 expresion: expresion OP_RESTA . termino

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    termino  go to state 69
    factor   go to state 39


state 55

   54 comparacion: expresion $@3 . comparador expresion

    MENOR_IGUAL  shift, and go to state 70
    MAYOR_IGUAL  shift, and go to state 71
    MENOR        shift, and go to state 72
    MAYOR        shift, and go to state 73
    DIFF         shift, and go to state 74
    IGUAL        shift, and go to state 75

    comparador  go to state 76


state 56

   43 termino: termino OP_MULT . factor

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    factor  go to state 77


state 57

   44 termino: termino OP_DIV . factor

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    factor  go to state 78


state 58

   18 while: WHILE condicion $@1 . BEGINW programa $@2 ENDW

    BEGINW  shift, and go to state 79


state 59

   51 condicion: comparacion AND . comparacion

    ID      shift, and go to state 30
    CTE_E   shift, and go to state 31
    CTE_R   shift, and go to state 32
    EQUMAX  shift, and go to state 4
    EQUMIN  shift, and go to state 5
    PARA    shift, and go to state 34

    equmax       go to state 35
    equmin       go to state 36
    expresion    go to state 37
    termino      go to state 38
    factor       go to state 39
    comparacion  go to state 80


state 60

   52 condicion: comparacion OR . comparacion

    ID      shift, and go to state 30
    CTE_E   shift, and go to state 31
    CTE_R   shift, and go to state 32
    EQUMAX  shift, and go to state 4
    EQUMIN  shift, and go to state 5
    PARA    shift, and go to state 34

    equmax       go to state 35
    equmin       go to state 36
    expresion    go to state 37
    termino      go to state 38
    factor       go to state 39
    comparacion  go to state 81


state 61

   19 seleccion: IF condicion THEN . programa
   20          | IF condicion THEN . programa ELSE programa

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    EQUMAX   shift, and go to state 4
    EQUMIN   shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    DIM      shift, and go to state 9

    programa     go to state 82
    sentencia    go to state 12
    asignacion   go to state 13
    iteracion    go to state 14
    while        go to state 15
    seleccion    go to state 16
    declaracion  go to state 17
    display      go to state 18
    get          go to state 19
    equmax       go to state 20
    equmin       go to state 21
    for          go to state 22


state 62

   32 listaVarDec: ID .

    $default  reduce using rule 32 (listaVarDec)


state 63

   21 declaracion: DIM CORCHA listaVarDec . CORCHC AS CORCHA listaType CORCHC
   33 listaVarDec: listaVarDec . COMA ID

    COMA    shift, and go to state 83
    CORCHC  shift, and go to state 84


state 64

   25 equmax: EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  shift, and go to state 85


state 65

   26 equmin: EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  shift, and go to state 86


state 66

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   63 for: FOR ID IGUALFOR expresion . TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion . TO expresion CORCHA CORCHC NEXT ID

    OP_SUM    shift, and go to state 53
    OP_RESTA  shift, and go to state 54
    TO        shift, and go to state 87


state 67

   45 factor: PARA expresion PARC .

    $default  reduce using rule 45 (factor)


state 68

   40 expresion: expresion OP_SUM termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  shift, and go to state 56
    OP_DIV   shift, and go to state 57

    $default  reduce using rule 40 (expresion)


state 69

   41 expresion: expresion OP_RESTA termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  shift, and go to state 56
    OP_DIV   shift, and go to state 57

    $default  reduce using rule 41 (expresion)


state 70

   57 comparador: MENOR_IGUAL .

    $default  reduce using rule 57 (comparador)


state 71

   58 comparador: MAYOR_IGUAL .

    $default  reduce using rule 58 (comparador)


state 72

   59 comparador: MENOR .

    $default  reduce using rule 59 (comparador)


state 73

   60 comparador: MAYOR .

    $default  reduce using rule 60 (comparador)


state 74

   61 comparador: DIFF .

    $default  reduce using rule 61 (comparador)


state 75

   62 comparador: IGUAL .

    $default  reduce using rule 62 (comparador)


state 76

   54 comparacion: expresion $@3 comparador . expresion

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    expresion  go to state 88
    termino    go to state 38
    factor     go to state 39


state 77

   43 termino: termino OP_MULT factor .

    $default  reduce using rule 43 (termino)


state 78

   44 termino: termino OP_DIV factor .

    $default  reduce using rule 44 (termino)


state 79

   18 while: WHILE condicion $@1 BEGINW . programa $@2 ENDW

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    EQUMAX   shift, and go to state 4
    EQUMIN   shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    DIM      shift, and go to state 9

    programa     go to state 89
    sentencia    go to state 12
    asignacion   go to state 13
    iteracion    go to state 14
    while        go to state 15
    seleccion    go to state 16
    declaracion  go to state 17
    display      go to state 18
    get          go to state 19
    equmax       go to state 20
    equmin       go to state 21
    for          go to state 22


state 80

   51 condicion: comparacion AND comparacion .

    $default  reduce using rule 51 (condicion)


state 81

   52 condicion: comparacion OR comparacion .

    $default  reduce using rule 52 (condicion)


state 82

    3 programa: programa . sentencia
   19 seleccion: IF condicion THEN programa .
   20          | IF condicion THEN programa . ELSE programa

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    EQUMAX   shift, and go to state 4
    EQUMIN   shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    ELSE     shift, and go to state 90
    DIM      shift, and go to state 9

    ID        [reduce using rule 19 (seleccion)]
    GET       [reduce using rule 19 (seleccion)]
    DISPLAY   [reduce using rule 19 (seleccion)]
    EQUMAX    [reduce using rule 19 (seleccion)]
    EQUMIN    [reduce using rule 19 (seleccion)]
    FOR       [reduce using rule 19 (seleccion)]
    WHILE     [reduce using rule 19 (seleccion)]
    IF        [reduce using rule 19 (seleccion)]
    ELSE      [reduce using rule 19 (seleccion)]
    DIM       [reduce using rule 19 (seleccion)]
    $default  reduce using rule 19 (seleccion)

    sentencia    go to state 45
    asignacion   go to state 13
    iteracion    go to state 14
    while        go to state 15
    seleccion    go to state 16
    declaracion  go to state 17
    display      go to state 18
    get          go to state 19
    equmax       go to state 20
    equmin       go to state 21
    for          go to state 22


state 83

   33 listaVarDec: listaVarDec COMA . ID

    ID  shift, and go to state 91


state 84

   21 declaracion: DIM CORCHA listaVarDec CORCHC . AS CORCHA listaType CORCHC

    AS  shift, and go to state 92


state 85

   25 equmax: EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     shift, and go to state 93
    CTE_E  shift, and go to state 94
    CTE_R  shift, and go to state 95

    listaEqu  go to state 96
    itemEqu   go to state 97


state 86

   26 equmin: EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     shift, and go to state 93
    CTE_E  shift, and go to state 94
    CTE_R  shift, and go to state 95

    listaEqu  go to state 98
    itemEqu   go to state 97


state 87

   63 for: FOR ID IGUALFOR expresion TO . expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO . expresion CORCHA CORCHC NEXT ID

    ID     shift, and go to state 30
    CTE_E  shift, and go to state 31
    CTE_R  shift, and go to state 32
    PARA   shift, and go to state 34

    expresion  go to state 99
    termino    go to state 38
    factor     go to state 39


state 88

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   54 comparacion: expresion $@3 comparador expresion .

    OP_SUM    shift, and go to state 53
    OP_RESTA  shift, and go to state 54

    $default  reduce using rule 54 (comparacion)


state 89

    3 programa: programa . sentencia
   18 while: WHILE condicion $@1 BEGINW programa . $@2 ENDW

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    EQUMAX   shift, and go to state 4
    EQUMIN   shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    DIM      shift, and go to state 9

    $default  reduce using rule 17 ($@2)

    sentencia    go to state 45
    asignacion   go to state 13
    iteracion    go to state 14
    while        go to state 15
    $@2          go to state 100
    seleccion    go to state 16
    declaracion  go to state 17
    display      go to state 18
    get          go to state 19
    equmax       go to state 20
    equmin       go to state 21
    for          go to state 22


state 90

   20 seleccion: IF condicion THEN programa ELSE . programa

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    EQUMAX   shift, and go to state 4
    EQUMIN   shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    DIM      shift, and go to state 9

    programa     go to state 101
    sentencia    go to state 12
    asignacion   go to state 13
    iteracion    go to state 14
    while        go to state 15
    seleccion    go to state 16
    declaracion  go to state 17
    display      go to state 18
    get          go to state 19
    equmax       go to state 20
    equmin       go to state 21
    for          go to state 22


state 91

   33 listaVarDec: listaVarDec COMA ID .

    $default  reduce using rule 33 (listaVarDec)


state 92

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS . CORCHA listaType CORCHC

    CORCHA  shift, and go to state 102


state 93

   29 itemEqu: ID .

    $default  reduce using rule 29 (itemEqu)


state 94

   30 itemEqu: CTE_E .

    $default  reduce using rule 30 (itemEqu)


state 95

   31 itemEqu: CTE_R .

    $default  reduce using rule 31 (itemEqu)


state 96

   25 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    shift, and go to state 103
    CORCHC  shift, and go to state 104


state 97

   27 listaEqu: itemEqu .

    $default  reduce using rule 27 (listaEqu)


state 98

   26 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    shift, and go to state 103
    CORCHC  shift, and go to state 105


state 99

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   63 for: FOR ID IGUALFOR expresion TO expresion . CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion . CORCHA CORCHC NEXT ID

    OP_SUM    shift, and go to state 53
    OP_RESTA  shift, and go to state 54
    CORCHA    shift, and go to state 106


state 100

   18 while: WHILE condicion $@1 BEGINW programa $@2 . ENDW

    ENDW  shift, and go to state 107


state 101

    3 programa: programa . sentencia
   20 seleccion: IF condicion THEN programa ELSE programa .

    ID       shift, and go to state 1
    GET      shift, and go to state 2
    DISPLAY  shift, and go to state 3
    EQUMAX   shift, and go to state 4
    EQUMIN   shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    DIM      shift, and go to state 9

    ID        [reduce using rule 20 (seleccion)]
    GET       [reduce using rule 20 (seleccion)]
    DISPLAY   [reduce using rule 20 (seleccion)]
    EQUMAX    [reduce using rule 20 (seleccion)]
    EQUMIN    [reduce using rule 20 (seleccion)]
    FOR       [reduce using rule 20 (seleccion)]
    WHILE     [reduce using rule 20 (seleccion)]
    IF        [reduce using rule 20 (seleccion)]
    DIM       [reduce using rule 20 (seleccion)]
    $default  reduce using rule 20 (seleccion)

    sentencia    go to state 45
    asignacion   go to state 13
    iteracion    go to state 14
    while        go to state 15
    seleccion    go to state 16
    declaracion  go to state 17
    display      go to state 18
    get          go to state 19
    equmax       go to state 20
    equmin       go to state 21
    for          go to state 22


state 102

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA . listaType CORCHC

    INTEGER  shift, and go to state 108
    STRING   shift, and go to state 109
    REAL     shift, and go to state 110

    listaType  go to state 111
    TYPE       go to state 112


state 103

   28 listaEqu: listaEqu COMA . itemEqu

    ID     shift, and go to state 93
    CTE_E  shift, and go to state 94
    CTE_R  shift, and go to state 95

    itemEqu  go to state 113


state 104

   25 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  shift, and go to state 114


state 105

   26 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  shift, and go to state 115


state 106

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA . CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion CORCHA . CORCHC NEXT ID

    CTE_E   shift, and go to state 116
    CORCHC  shift, and go to state 117


state 107

   18 while: WHILE condicion $@1 BEGINW programa $@2 ENDW .

    $default  reduce using rule 18 (while)


state 108

   36 TYPE: INTEGER .

    $default  reduce using rule 36 (TYPE)


state 109

   37 TYPE: STRING .

    $default  reduce using rule 37 (TYPE)


state 110

   38 TYPE: REAL .

    $default  reduce using rule 38 (TYPE)


state 111

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   35 listaType: listaType . COMA TYPE

    COMA    shift, and go to state 118
    CORCHC  shift, and go to state 119


state 112

   34 listaType: TYPE .

    $default  reduce using rule 34 (listaType)


state 113

   28 listaEqu: listaEqu COMA itemEqu .

    $default  reduce using rule 28 (listaEqu)


state 114

   25 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce using rule 25 (equmax)


state 115

   26 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce using rule 26 (equmin)


state 116

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E . CORCHC NEXT ID

    CORCHC  shift, and go to state 120


state 117

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC . NEXT ID

    NEXT  shift, and go to state 121


state 118

   35 listaType: listaType COMA . TYPE

    INTEGER  shift, and go to state 108
    STRING   shift, and go to state 109
    REAL     shift, and go to state 110

    TYPE  go to state 122


state 119

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC .

    $default  reduce using rule 21 (declaracion)


state 120

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC . NEXT ID

    NEXT  shift, and go to state 123


state 121

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT . ID

    ID  shift, and go to state 124


state 122

   35 listaType: listaType COMA TYPE .

    $default  reduce using rule 35 (listaType)


state 123

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT . ID

    ID  shift, and go to state 125


state 124

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID .

    $default  reduce using rule 64 (for)


state 125

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID .

    $default  reduce using rule 63 (for)
