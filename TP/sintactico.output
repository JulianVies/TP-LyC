Terminals unused in grammar

   ENDIF
   LLAVEA
   LLAVEC


Estado 82 conflictos: 10 desplazamiento(s)/reducción(ones)
Estado 101 conflictos: 9 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: inicio $end

    1 inicio: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | iteracion
    6          | seleccion
    7          | declaracion
    8          | display
    9          | get
   10          | equmax
   11          | equmin

   12 asignacion: ID OP_ASIG expresion
   13           | ID OP_ASIG CTE_S

   14 iteracion: while
   15          | for

   16 $@1: /* vacío */

   17 $@2: /* vacío */

   18 while: WHILE condicion $@1 BEGINW programa $@2 ENDW

   19 seleccion: IF condicion THEN programa
   20          | IF condicion THEN programa ELSE programa

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

   22 display: DISPLAY ID
   23        | DISPLAY CTE_S

   24 get: GET ID

   25 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC

   26 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

   27 listaEqu: itemEqu
   28         | listaEqu COMA itemEqu

   29 itemEqu: ID
   30        | CTE_E
   31        | CTE_R

   32 listaVarDec: ID
   33            | listaVarDec COMA ID

   34 listaType: TYPE
   35          | listaType COMA TYPE

   36 TYPE: INTEGER
   37     | STRING
   38     | REAL

   39 expresion: termino
   40          | expresion OP_SUM termino
   41          | expresion OP_RESTA termino

   42 termino: factor
   43        | termino OP_MULT factor
   44        | termino OP_DIV factor

   45 factor: PARA expresion PARC
   46       | ID
   47       | CTE_E
   48       | CTE_R

   49 condicion: comparacion
   50          | NOT comparacion
   51          | comparacion AND comparacion
   52          | comparacion OR comparacion

   53 $@3: /* vacío */

   54 comparacion: expresion $@3 comparador expresion
   55            | equmax
   56            | equmin

   57 comparador: MENOR_IGUAL
   58           | MAYOR_IGUAL
   59           | MENOR
   60           | MAYOR
   61           | DIFF
   62           | IGUAL

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 12 13 22 24 29 32 33 46 63 64
CTE_S (259) 13 23
CTE_E (260) 30 47 63
CTE_R (261) 31 48
GET (262) 24
DISPLAY (263) 22 23
EQUMAX (264) 25
EQUMIN (265) 26
FOR (266) 63 64
WHILE (267) 18
BEGINW (268) 18
ENDW (269) 18
THEN (270) 19 20
IF (271) 19 20
ELSE (272) 20
ENDIF (273)
NOT (274) 50
AND (275) 51
OR (276) 52
OP_ASIG (277) 12 13
COMA (278) 28 33 35
PYC (279) 25 26
OP_SUM (280) 40
OP_RESTA (281) 41
OP_MULT (282) 43
OP_DIV (283) 44
CORCHA (284) 21 25 26 63 64
CORCHC (285) 21 25 26 63 64
PARA (286) 25 26 45
PARC (287) 25 26 45
LLAVEA (288)
LLAVEC (289)
MENOR_IGUAL (290) 57
MAYOR_IGUAL (291) 58
MENOR (292) 59
MAYOR (293) 60
DIFF (294) 61
IGUAL (295) 62
IGUALFOR (296) 63 64
DIM (297) 21
AS (298) 21
TO (299) 63 64
NEXT (300) 63 64
INTEGER (301) 36
STRING (302) 37
REAL (303) 38


No terminales con las reglas donde aparecen

$accept (49)
    en la izquierda: 0
inicio (50)
    en la izquierda: 1, en la derecha: 0
programa (51)
    en la izquierda: 2 3, en la derecha: 1 3 18 19 20
sentencia (52)
    en la izquierda: 4 5 6 7 8 9 10 11, en la derecha: 2 3
asignacion (53)
    en la izquierda: 12 13, en la derecha: 4
iteracion (54)
    en la izquierda: 14 15, en la derecha: 5
while (55)
    en la izquierda: 18, en la derecha: 14
$@1 (56)
    en la izquierda: 16, en la derecha: 18
$@2 (57)
    en la izquierda: 17, en la derecha: 18
seleccion (58)
    en la izquierda: 19 20, en la derecha: 6
declaracion (59)
    en la izquierda: 21, en la derecha: 7
display (60)
    en la izquierda: 22 23, en la derecha: 8
get (61)
    en la izquierda: 24, en la derecha: 9
equmax (62)
    en la izquierda: 25, en la derecha: 10 55
equmin (63)
    en la izquierda: 26, en la derecha: 11 56
listaEqu (64)
    en la izquierda: 27 28, en la derecha: 25 26 28
itemEqu (65)
    en la izquierda: 29 30 31, en la derecha: 27 28
listaVarDec (66)
    en la izquierda: 32 33, en la derecha: 21 33
listaType (67)
    en la izquierda: 34 35, en la derecha: 21 35
TYPE (68)
    en la izquierda: 36 37 38, en la derecha: 34 35
expresion (69)
    en la izquierda: 39 40 41, en la derecha: 12 25 26 40 41 45 54
    63 64
termino (70)
    en la izquierda: 42 43 44, en la derecha: 39 40 41 43 44
factor (71)
    en la izquierda: 45 46 47 48, en la derecha: 42 43 44
condicion (72)
    en la izquierda: 49 50 51 52, en la derecha: 18 19 20
comparacion (73)
    en la izquierda: 54 55 56, en la derecha: 49 50 51 52
$@3 (74)
    en la izquierda: 53, en la derecha: 54
comparador (75)
    en la izquierda: 57 58 59 60 61 62, en la derecha: 54
for (76)
    en la izquierda: 63 64, en la derecha: 15


estado 0

    0 $accept: . inicio $end

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    inicio       ir al estado 10
    programa     ir al estado 11
    sentencia    ir al estado 12
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 1

   12 asignacion: ID . OP_ASIG expresion
   13           | ID . OP_ASIG CTE_S

    OP_ASIG  desplazar e ir al estado 23


estado 2

   24 get: GET . ID

    ID  desplazar e ir al estado 24


estado 3

   22 display: DISPLAY . ID
   23        | DISPLAY . CTE_S

    ID     desplazar e ir al estado 25
    CTE_S  desplazar e ir al estado 26


estado 4

   25 equmax: EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 27


estado 5

   26 equmin: EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 28


estado 6

   63 for: FOR . ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR . ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID

    ID  desplazar e ir al estado 29


estado 7

   18 while: WHILE . condicion $@1 BEGINW programa $@2 ENDW

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    NOT     desplazar e ir al estado 33
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    condicion    ir al estado 40
    comparacion  ir al estado 41


estado 8

   19 seleccion: IF . condicion THEN programa
   20          | IF . condicion THEN programa ELSE programa

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    NOT     desplazar e ir al estado 33
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    condicion    ir al estado 42
    comparacion  ir al estado 41


estado 9

   21 declaracion: DIM . CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 43


estado 10

    0 $accept: inicio . $end

    $end  desplazar e ir al estado 44


estado 11

    1 inicio: programa .
    3 programa: programa . sentencia

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    $default  reduce usando la regla 1 (inicio)

    sentencia    ir al estado 45
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 12

    2 programa: sentencia .

    $default  reduce usando la regla 2 (programa)


estado 13

    4 sentencia: asignacion .

    $default  reduce usando la regla 4 (sentencia)


estado 14

    5 sentencia: iteracion .

    $default  reduce usando la regla 5 (sentencia)


estado 15

   14 iteracion: while .

    $default  reduce usando la regla 14 (iteracion)


estado 16

    6 sentencia: seleccion .

    $default  reduce usando la regla 6 (sentencia)


estado 17

    7 sentencia: declaracion .

    $default  reduce usando la regla 7 (sentencia)


estado 18

    8 sentencia: display .

    $default  reduce usando la regla 8 (sentencia)


estado 19

    9 sentencia: get .

    $default  reduce usando la regla 9 (sentencia)


estado 20

   10 sentencia: equmax .

    $default  reduce usando la regla 10 (sentencia)


estado 21

   11 sentencia: equmin .

    $default  reduce usando la regla 11 (sentencia)


estado 22

   15 iteracion: for .

    $default  reduce usando la regla 15 (iteracion)


estado 23

   12 asignacion: ID OP_ASIG . expresion
   13           | ID OP_ASIG . CTE_S

    ID     desplazar e ir al estado 30
    CTE_S  desplazar e ir al estado 46
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 47
    termino    ir al estado 38
    factor     ir al estado 39


estado 24

   24 get: GET ID .

    $default  reduce usando la regla 24 (get)


estado 25

   22 display: DISPLAY ID .

    $default  reduce usando la regla 22 (display)


estado 26

   23 display: DISPLAY CTE_S .

    $default  reduce usando la regla 23 (display)


estado 27

   25 equmax: EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 48
    termino    ir al estado 38
    factor     ir al estado 39


estado 28

   26 equmin: EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 49
    termino    ir al estado 38
    factor     ir al estado 39


estado 29

   63 for: FOR ID . IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID . IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID

    IGUALFOR  desplazar e ir al estado 50


estado 30

   46 factor: ID .

    $default  reduce usando la regla 46 (factor)


estado 31

   47 factor: CTE_E .

    $default  reduce usando la regla 47 (factor)


estado 32

   48 factor: CTE_R .

    $default  reduce usando la regla 48 (factor)


estado 33

   50 condicion: NOT . comparacion

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    comparacion  ir al estado 51


estado 34

   45 factor: PARA . expresion PARC

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 52
    termino    ir al estado 38
    factor     ir al estado 39


estado 35

   55 comparacion: equmax .

    $default  reduce usando la regla 55 (comparacion)


estado 36

   56 comparacion: equmin .

    $default  reduce usando la regla 56 (comparacion)


estado 37

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   54 comparacion: expresion . $@3 comparador expresion

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54

    $default  reduce usando la regla 53 ($@3)

    $@3  ir al estado 55


estado 38

   39 expresion: termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 39 (expresion)


estado 39

   42 termino: factor .

    $default  reduce usando la regla 42 (termino)


estado 40

   18 while: WHILE condicion . $@1 BEGINW programa $@2 ENDW

    $default  reduce usando la regla 16 ($@1)

    $@1  ir al estado 58


estado 41

   49 condicion: comparacion .
   51          | comparacion . AND comparacion
   52          | comparacion . OR comparacion

    AND  desplazar e ir al estado 59
    OR   desplazar e ir al estado 60

    $default  reduce usando la regla 49 (condicion)


estado 42

   19 seleccion: IF condicion . THEN programa
   20          | IF condicion . THEN programa ELSE programa

    THEN  desplazar e ir al estado 61


estado 43

   21 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID  desplazar e ir al estado 62

    listaVarDec  ir al estado 63


estado 44

    0 $accept: inicio $end .

    $default  aceptar


estado 45

    3 programa: programa sentencia .

    $default  reduce usando la regla 3 (programa)


estado 46

   13 asignacion: ID OP_ASIG CTE_S .

    $default  reduce usando la regla 13 (asignacion)


estado 47

   12 asignacion: ID OP_ASIG expresion .
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54

    $default  reduce usando la regla 12 (asignacion)


estado 48

   25 equmax: EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 64
    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54


estado 49

   26 equmin: EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 65
    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54


estado 50

   63 for: FOR ID IGUALFOR . expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR . expresion TO expresion CORCHA CORCHC NEXT ID

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 66
    termino    ir al estado 38
    factor     ir al estado 39


estado 51

   50 condicion: NOT comparacion .

    $default  reduce usando la regla 50 (condicion)


estado 52

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   45 factor: PARA expresion . PARC

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54
    PARC      desplazar e ir al estado 67


estado 53

   40 expresion: expresion OP_SUM . termino

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    termino  ir al estado 68
    factor   ir al estado 39


estado 54

   41 expresion: expresion OP_RESTA . termino

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    termino  ir al estado 69
    factor   ir al estado 39


estado 55

   54 comparacion: expresion $@3 . comparador expresion

    MENOR_IGUAL  desplazar e ir al estado 70
    MAYOR_IGUAL  desplazar e ir al estado 71
    MENOR        desplazar e ir al estado 72
    MAYOR        desplazar e ir al estado 73
    DIFF         desplazar e ir al estado 74
    IGUAL        desplazar e ir al estado 75

    comparador  ir al estado 76


estado 56

   43 termino: termino OP_MULT . factor

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    factor  ir al estado 77


estado 57

   44 termino: termino OP_DIV . factor

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    factor  ir al estado 78


estado 58

   18 while: WHILE condicion $@1 . BEGINW programa $@2 ENDW

    BEGINW  desplazar e ir al estado 79


estado 59

   51 condicion: comparacion AND . comparacion

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    comparacion  ir al estado 80


estado 60

   52 condicion: comparacion OR . comparacion

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    comparacion  ir al estado 81


estado 61

   19 seleccion: IF condicion THEN . programa
   20          | IF condicion THEN . programa ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    programa     ir al estado 82
    sentencia    ir al estado 12
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 62

   32 listaVarDec: ID .

    $default  reduce usando la regla 32 (listaVarDec)


estado 63

   21 declaracion: DIM CORCHA listaVarDec . CORCHC AS CORCHA listaType CORCHC
   33 listaVarDec: listaVarDec . COMA ID

    COMA    desplazar e ir al estado 83
    CORCHC  desplazar e ir al estado 84


estado 64

   25 equmax: EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 85


estado 65

   26 equmin: EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 86


estado 66

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   63 for: FOR ID IGUALFOR expresion . TO expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion . TO expresion CORCHA CORCHC NEXT ID

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54
    TO        desplazar e ir al estado 87


estado 67

   45 factor: PARA expresion PARC .

    $default  reduce usando la regla 45 (factor)


estado 68

   40 expresion: expresion OP_SUM termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 40 (expresion)


estado 69

   41 expresion: expresion OP_RESTA termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 41 (expresion)


estado 70

   57 comparador: MENOR_IGUAL .

    $default  reduce usando la regla 57 (comparador)


estado 71

   58 comparador: MAYOR_IGUAL .

    $default  reduce usando la regla 58 (comparador)


estado 72

   59 comparador: MENOR .

    $default  reduce usando la regla 59 (comparador)


estado 73

   60 comparador: MAYOR .

    $default  reduce usando la regla 60 (comparador)


estado 74

   61 comparador: DIFF .

    $default  reduce usando la regla 61 (comparador)


estado 75

   62 comparador: IGUAL .

    $default  reduce usando la regla 62 (comparador)


estado 76

   54 comparacion: expresion $@3 comparador . expresion

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 88
    termino    ir al estado 38
    factor     ir al estado 39


estado 77

   43 termino: termino OP_MULT factor .

    $default  reduce usando la regla 43 (termino)


estado 78

   44 termino: termino OP_DIV factor .

    $default  reduce usando la regla 44 (termino)


estado 79

   18 while: WHILE condicion $@1 BEGINW . programa $@2 ENDW

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    programa     ir al estado 89
    sentencia    ir al estado 12
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 80

   51 condicion: comparacion AND comparacion .

    $default  reduce usando la regla 51 (condicion)


estado 81

   52 condicion: comparacion OR comparacion .

    $default  reduce usando la regla 52 (condicion)


estado 82

    3 programa: programa . sentencia
   19 seleccion: IF condicion THEN programa .
   20          | IF condicion THEN programa . ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    ELSE     desplazar e ir al estado 90
    DIM      desplazar e ir al estado 9

    ID        [reduce usando la regla 19 (seleccion)]
    GET       [reduce usando la regla 19 (seleccion)]
    DISPLAY   [reduce usando la regla 19 (seleccion)]
    EQUMAX    [reduce usando la regla 19 (seleccion)]
    EQUMIN    [reduce usando la regla 19 (seleccion)]
    FOR       [reduce usando la regla 19 (seleccion)]
    WHILE     [reduce usando la regla 19 (seleccion)]
    IF        [reduce usando la regla 19 (seleccion)]
    ELSE      [reduce usando la regla 19 (seleccion)]
    DIM       [reduce usando la regla 19 (seleccion)]
    $default  reduce usando la regla 19 (seleccion)

    sentencia    ir al estado 45
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 83

   33 listaVarDec: listaVarDec COMA . ID

    ID  desplazar e ir al estado 91


estado 84

   21 declaracion: DIM CORCHA listaVarDec CORCHC . AS CORCHA listaType CORCHC

    AS  desplazar e ir al estado 92


estado 85

   25 equmax: EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 93
    CTE_E  desplazar e ir al estado 94
    CTE_R  desplazar e ir al estado 95

    listaEqu  ir al estado 96
    itemEqu   ir al estado 97


estado 86

   26 equmin: EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 93
    CTE_E  desplazar e ir al estado 94
    CTE_R  desplazar e ir al estado 95

    listaEqu  ir al estado 98
    itemEqu   ir al estado 97


estado 87

   63 for: FOR ID IGUALFOR expresion TO . expresion CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO . expresion CORCHA CORCHC NEXT ID

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 99
    termino    ir al estado 38
    factor     ir al estado 39


estado 88

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   54 comparacion: expresion $@3 comparador expresion .

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54

    $default  reduce usando la regla 54 (comparacion)


estado 89

    3 programa: programa . sentencia
   18 while: WHILE condicion $@1 BEGINW programa . $@2 ENDW

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    $default  reduce usando la regla 17 ($@2)

    sentencia    ir al estado 45
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    $@2          ir al estado 100
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 90

   20 seleccion: IF condicion THEN programa ELSE . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    programa     ir al estado 101
    sentencia    ir al estado 12
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 91

   33 listaVarDec: listaVarDec COMA ID .

    $default  reduce usando la regla 33 (listaVarDec)


estado 92

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS . CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 102


estado 93

   29 itemEqu: ID .

    $default  reduce usando la regla 29 (itemEqu)


estado 94

   30 itemEqu: CTE_E .

    $default  reduce usando la regla 30 (itemEqu)


estado 95

   31 itemEqu: CTE_R .

    $default  reduce usando la regla 31 (itemEqu)


estado 96

   25 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 103
    CORCHC  desplazar e ir al estado 104


estado 97

   27 listaEqu: itemEqu .

    $default  reduce usando la regla 27 (listaEqu)


estado 98

   26 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 103
    CORCHC  desplazar e ir al estado 105


estado 99

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   63 for: FOR ID IGUALFOR expresion TO expresion . CORCHA CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion . CORCHA CORCHC NEXT ID

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54
    CORCHA    desplazar e ir al estado 106


estado 100

   18 while: WHILE condicion $@1 BEGINW programa $@2 . ENDW

    ENDW  desplazar e ir al estado 107


estado 101

    3 programa: programa . sentencia
   20 seleccion: IF condicion THEN programa ELSE programa .

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    ID        [reduce usando la regla 20 (seleccion)]
    GET       [reduce usando la regla 20 (seleccion)]
    DISPLAY   [reduce usando la regla 20 (seleccion)]
    EQUMAX    [reduce usando la regla 20 (seleccion)]
    EQUMIN    [reduce usando la regla 20 (seleccion)]
    FOR       [reduce usando la regla 20 (seleccion)]
    WHILE     [reduce usando la regla 20 (seleccion)]
    IF        [reduce usando la regla 20 (seleccion)]
    DIM       [reduce usando la regla 20 (seleccion)]
    $default  reduce usando la regla 20 (seleccion)

    sentencia    ir al estado 45
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 102

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA . listaType CORCHC

    INTEGER  desplazar e ir al estado 108
    STRING   desplazar e ir al estado 109
    REAL     desplazar e ir al estado 110

    listaType  ir al estado 111
    TYPE       ir al estado 112


estado 103

   28 listaEqu: listaEqu COMA . itemEqu

    ID     desplazar e ir al estado 93
    CTE_E  desplazar e ir al estado 94
    CTE_R  desplazar e ir al estado 95

    itemEqu  ir al estado 113


estado 104

   25 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 114


estado 105

   26 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 115


estado 106

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA . CTE_E CORCHC NEXT ID
   64    | FOR ID IGUALFOR expresion TO expresion CORCHA . CORCHC NEXT ID

    CTE_E   desplazar e ir al estado 116
    CORCHC  desplazar e ir al estado 117


estado 107

   18 while: WHILE condicion $@1 BEGINW programa $@2 ENDW .

    $default  reduce usando la regla 18 (while)


estado 108

   36 TYPE: INTEGER .

    $default  reduce usando la regla 36 (TYPE)


estado 109

   37 TYPE: STRING .

    $default  reduce usando la regla 37 (TYPE)


estado 110

   38 TYPE: REAL .

    $default  reduce usando la regla 38 (TYPE)


estado 111

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   35 listaType: listaType . COMA TYPE

    COMA    desplazar e ir al estado 118
    CORCHC  desplazar e ir al estado 119


estado 112

   34 listaType: TYPE .

    $default  reduce usando la regla 34 (listaType)


estado 113

   28 listaEqu: listaEqu COMA itemEqu .

    $default  reduce usando la regla 28 (listaEqu)


estado 114

   25 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 25 (equmax)


estado 115

   26 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 26 (equmin)


estado 116

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E . CORCHC NEXT ID

    CORCHC  desplazar e ir al estado 120


estado 117

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC . NEXT ID

    NEXT  desplazar e ir al estado 121


estado 118

   35 listaType: listaType COMA . TYPE

    INTEGER  desplazar e ir al estado 108
    STRING   desplazar e ir al estado 109
    REAL     desplazar e ir al estado 110

    TYPE  ir al estado 122


estado 119

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC .

    $default  reduce usando la regla 21 (declaracion)


estado 120

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC . NEXT ID

    NEXT  desplazar e ir al estado 123


estado 121

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT . ID

    ID  desplazar e ir al estado 124


estado 122

   35 listaType: listaType COMA TYPE .

    $default  reduce usando la regla 35 (listaType)


estado 123

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT . ID

    ID  desplazar e ir al estado 125


estado 124

   64 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID .

    $default  reduce usando la regla 64 (for)


estado 125

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID .

    $default  reduce usando la regla 63 (for)
