Terminals unused in grammar

   LLAVEA
   LLAVEC


Gramática

    0 $accept: inicio $end

    1 inicio: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | iteracion
    6          | seleccion
    7          | declaracion
    8          | display
    9          | get

   10 asignacion: ID OP_ASIG expresion
   11           | ID OP_ASIG CTE_S

   12 iteracion: while
   13          | for

   14 $@1: /* vacío */

   15 $@2: /* vacío */

   16 while: WHILE condicion $@1 BEGINW programa $@2 ENDW

   17 seleccion: IF condicion THEN programa ENDIF

   18 $@3: /* vacío */

   19 $@4: /* vacío */

   20 seleccion: IF condicion THEN programa $@3 ELSE $@4 programa ENDIF

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

   22 display: DISPLAY ID
   23        | DISPLAY CTE_S

   24 get: GET ID

   25 $@5: /* vacío */

   26 $@6: /* vacío */

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA listaEqu CORCHC PARC

   28 $@7: /* vacío */

   29 $@8: /* vacío */

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA listaEqu CORCHC PARC

   31 listaEqu: itemEqu
   32         | listaEqu COMA itemEqu

   33 itemEqu: ID
   34        | CTE_E
   35        | CTE_R

   36 listaVarDec: ID
   37            | listaVarDec COMA ID

   38 listaType: TYPE
   39          | listaType COMA TYPE

   40 TYPE: INTEGER
   41     | STRING
   42     | REAL

   43 expresion: termino
   44          | expresion OP_SUM termino
   45          | expresion OP_RESTA termino

   46 termino: factor
   47        | termino OP_MULT factor
   48        | termino OP_DIV factor

   49 factor: PARA expresion PARC
   50       | ID
   51       | CTE_E
   52       | CTE_R

   53 condicion: comparacion
   54          | NOT comparacion
   55          | comparacion AND comparacion
   56          | comparacion OR comparacion

   57 $@9: /* vacío */

   58 comparacion: expresion $@9 comparador expresion
   59            | equmax
   60            | equmin

   61 comparador: MENOR_IGUAL
   62           | MAYOR_IGUAL
   63           | MENOR
   64           | MAYOR
   65           | DIFF
   66           | IGUAL

   67 $@10: /* vacío */

   68 $@11: /* vacío */

   69 $@12: /* vacío */

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID

   71 salto: CORCHA CORCHC
   72      | CORCHA CTE_E CORCHC


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 10 11 22 24 33 36 37 50 70
CTE_S (259) 11 23
CTE_E (260) 34 51 72
CTE_R (261) 35 52
GET (262) 24
DISPLAY (263) 22 23
EQUMAX (264) 27
EQUMIN (265) 30
FOR (266) 70
WHILE (267) 16
BEGINW (268) 16
ENDW (269) 16
THEN (270) 17 20
IF (271) 17 20
ELSE (272) 20
ENDIF (273) 17 20
NOT (274) 54
AND (275) 55
OR (276) 56
OP_ASIG (277) 10 11
COMA (278) 32 37 39
PYC (279) 27 30
OP_SUM (280) 44
OP_RESTA (281) 45
OP_MULT (282) 47
OP_DIV (283) 48
CORCHA (284) 21 27 30 71 72
CORCHC (285) 21 27 30 71 72
PARA (286) 27 30 49
PARC (287) 27 30 49
LLAVEA (288)
LLAVEC (289)
MENOR_IGUAL (290) 61
MAYOR_IGUAL (291) 62
MENOR (292) 63
MAYOR (293) 64
DIFF (294) 65
IGUAL (295) 66
IGUALFOR (296) 70
DIM (297) 21
AS (298) 21
TO (299) 70
NEXT (300) 70
INTEGER (301) 40
STRING (302) 41
REAL (303) 42


No terminales con las reglas donde aparecen

$accept (49)
    en la izquierda: 0
inicio (50)
    en la izquierda: 1, en la derecha: 0
programa (51)
    en la izquierda: 2 3, en la derecha: 1 3 16 17 20 70
sentencia (52)
    en la izquierda: 4 5 6 7 8 9, en la derecha: 2 3
asignacion (53)
    en la izquierda: 10 11, en la derecha: 4
iteracion (54)
    en la izquierda: 12 13, en la derecha: 5
while (55)
    en la izquierda: 16, en la derecha: 12
$@1 (56)
    en la izquierda: 14, en la derecha: 16
$@2 (57)
    en la izquierda: 15, en la derecha: 16
seleccion (58)
    en la izquierda: 17 20, en la derecha: 6
$@3 (59)
    en la izquierda: 18, en la derecha: 20
$@4 (60)
    en la izquierda: 19, en la derecha: 20
declaracion (61)
    en la izquierda: 21, en la derecha: 7
display (62)
    en la izquierda: 22 23, en la derecha: 8
get (63)
    en la izquierda: 24, en la derecha: 9
equmax (64)
    en la izquierda: 27, en la derecha: 59
$@5 (65)
    en la izquierda: 25, en la derecha: 27
$@6 (66)
    en la izquierda: 26, en la derecha: 27
equmin (67)
    en la izquierda: 30, en la derecha: 60
$@7 (68)
    en la izquierda: 28, en la derecha: 30
$@8 (69)
    en la izquierda: 29, en la derecha: 30
listaEqu (70)
    en la izquierda: 31 32, en la derecha: 27 30 32
itemEqu (71)
    en la izquierda: 33 34 35, en la derecha: 31 32
listaVarDec (72)
    en la izquierda: 36 37, en la derecha: 21 37
listaType (73)
    en la izquierda: 38 39, en la derecha: 21 39
TYPE (74)
    en la izquierda: 40 41 42, en la derecha: 38 39
expresion (75)
    en la izquierda: 43 44 45, en la derecha: 10 27 30 44 45 49 58
    70
termino (76)
    en la izquierda: 46 47 48, en la derecha: 43 44 45 47 48
factor (77)
    en la izquierda: 49 50 51 52, en la derecha: 46 47 48
condicion (78)
    en la izquierda: 53 54 55 56, en la derecha: 16 17 20
comparacion (79)
    en la izquierda: 58 59 60, en la derecha: 53 54 55 56
$@9 (80)
    en la izquierda: 57, en la derecha: 58
comparador (81)
    en la izquierda: 61 62 63 64 65 66, en la derecha: 58
for (82)
    en la izquierda: 70, en la derecha: 13
$@10 (83)
    en la izquierda: 67, en la derecha: 70
$@11 (84)
    en la izquierda: 68, en la derecha: 70
$@12 (85)
    en la izquierda: 69, en la derecha: 70
salto (86)
    en la izquierda: 71 72, en la derecha: 70


estado 0

    0 $accept: . inicio $end

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    inicio       ir al estado 8
    programa     ir al estado 9
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 1

   10 asignacion: ID . OP_ASIG expresion
   11           | ID . OP_ASIG CTE_S

    OP_ASIG  desplazar e ir al estado 19


estado 2

   24 get: GET . ID

    ID  desplazar e ir al estado 20


estado 3

   22 display: DISPLAY . ID
   23        | DISPLAY . CTE_S

    ID     desplazar e ir al estado 21
    CTE_S  desplazar e ir al estado 22


estado 4

   70 for: FOR . ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID

    ID  desplazar e ir al estado 23


estado 5

   16 while: WHILE . condicion $@1 BEGINW programa $@2 ENDW

    ID      desplazar e ir al estado 24
    CTE_E   desplazar e ir al estado 25
    CTE_R   desplazar e ir al estado 26
    EQUMAX  desplazar e ir al estado 27
    EQUMIN  desplazar e ir al estado 28
    NOT     desplazar e ir al estado 29
    PARA    desplazar e ir al estado 30

    equmax       ir al estado 31
    equmin       ir al estado 32
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    condicion    ir al estado 36
    comparacion  ir al estado 37


estado 6

   17 seleccion: IF . condicion THEN programa ENDIF
   20          | IF . condicion THEN programa $@3 ELSE $@4 programa ENDIF

    ID      desplazar e ir al estado 24
    CTE_E   desplazar e ir al estado 25
    CTE_R   desplazar e ir al estado 26
    EQUMAX  desplazar e ir al estado 27
    EQUMIN  desplazar e ir al estado 28
    NOT     desplazar e ir al estado 29
    PARA    desplazar e ir al estado 30

    equmax       ir al estado 31
    equmin       ir al estado 32
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    condicion    ir al estado 38
    comparacion  ir al estado 37


estado 7

   21 declaracion: DIM . CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 39


estado 8

    0 $accept: inicio . $end

    $end  desplazar e ir al estado 40


estado 9

    1 inicio: programa .
    3 programa: programa . sentencia

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    $default  reduce usando la regla 1 (inicio)

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 10

    2 programa: sentencia .

    $default  reduce usando la regla 2 (programa)


estado 11

    4 sentencia: asignacion .

    $default  reduce usando la regla 4 (sentencia)


estado 12

    5 sentencia: iteracion .

    $default  reduce usando la regla 5 (sentencia)


estado 13

   12 iteracion: while .

    $default  reduce usando la regla 12 (iteracion)


estado 14

    6 sentencia: seleccion .

    $default  reduce usando la regla 6 (sentencia)


estado 15

    7 sentencia: declaracion .

    $default  reduce usando la regla 7 (sentencia)


estado 16

    8 sentencia: display .

    $default  reduce usando la regla 8 (sentencia)


estado 17

    9 sentencia: get .

    $default  reduce usando la regla 9 (sentencia)


estado 18

   13 iteracion: for .

    $default  reduce usando la regla 13 (iteracion)


estado 19

   10 asignacion: ID OP_ASIG . expresion
   11           | ID OP_ASIG . CTE_S

    ID     desplazar e ir al estado 24
    CTE_S  desplazar e ir al estado 42
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 43
    termino    ir al estado 34
    factor     ir al estado 35


estado 20

   24 get: GET ID .

    $default  reduce usando la regla 24 (get)


estado 21

   22 display: DISPLAY ID .

    $default  reduce usando la regla 22 (display)


estado 22

   23 display: DISPLAY CTE_S .

    $default  reduce usando la regla 23 (display)


estado 23

   70 for: FOR ID . IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID

    IGUALFOR  desplazar e ir al estado 44


estado 24

   50 factor: ID .

    $default  reduce usando la regla 50 (factor)


estado 25

   51 factor: CTE_E .

    $default  reduce usando la regla 51 (factor)


estado 26

   52 factor: CTE_R .

    $default  reduce usando la regla 52 (factor)


estado 27

   27 equmax: EQUMAX . $@5 PARA expresion $@6 PYC CORCHA listaEqu CORCHC PARC

    $default  reduce usando la regla 25 ($@5)

    $@5  ir al estado 45


estado 28

   30 equmin: EQUMIN . $@7 PARA expresion $@8 PYC CORCHA listaEqu CORCHC PARC

    $default  reduce usando la regla 28 ($@7)

    $@7  ir al estado 46


estado 29

   54 condicion: NOT . comparacion

    ID      desplazar e ir al estado 24
    CTE_E   desplazar e ir al estado 25
    CTE_R   desplazar e ir al estado 26
    EQUMAX  desplazar e ir al estado 27
    EQUMIN  desplazar e ir al estado 28
    PARA    desplazar e ir al estado 30

    equmax       ir al estado 31
    equmin       ir al estado 32
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    comparacion  ir al estado 47


estado 30

   49 factor: PARA . expresion PARC

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 48
    termino    ir al estado 34
    factor     ir al estado 35


estado 31

   59 comparacion: equmax .

    $default  reduce usando la regla 59 (comparacion)


estado 32

   60 comparacion: equmin .

    $default  reduce usando la regla 60 (comparacion)


estado 33

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   58 comparacion: expresion . $@9 comparador expresion

    OP_SUM    desplazar e ir al estado 49
    OP_RESTA  desplazar e ir al estado 50

    $default  reduce usando la regla 57 ($@9)

    $@9  ir al estado 51


estado 34

   43 expresion: termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 52
    OP_DIV   desplazar e ir al estado 53

    $default  reduce usando la regla 43 (expresion)


estado 35

   46 termino: factor .

    $default  reduce usando la regla 46 (termino)


estado 36

   16 while: WHILE condicion . $@1 BEGINW programa $@2 ENDW

    $default  reduce usando la regla 14 ($@1)

    $@1  ir al estado 54


estado 37

   53 condicion: comparacion .
   55          | comparacion . AND comparacion
   56          | comparacion . OR comparacion

    AND  desplazar e ir al estado 55
    OR   desplazar e ir al estado 56

    $default  reduce usando la regla 53 (condicion)


estado 38

   17 seleccion: IF condicion . THEN programa ENDIF
   20          | IF condicion . THEN programa $@3 ELSE $@4 programa ENDIF

    THEN  desplazar e ir al estado 57


estado 39

   21 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID  desplazar e ir al estado 58

    listaVarDec  ir al estado 59


estado 40

    0 $accept: inicio $end .

    $default  aceptar


estado 41

    3 programa: programa sentencia .

    $default  reduce usando la regla 3 (programa)


estado 42

   11 asignacion: ID OP_ASIG CTE_S .

    $default  reduce usando la regla 11 (asignacion)


estado 43

   10 asignacion: ID OP_ASIG expresion .
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    OP_SUM    desplazar e ir al estado 49
    OP_RESTA  desplazar e ir al estado 50

    $default  reduce usando la regla 10 (asignacion)


estado 44

   70 for: FOR ID IGUALFOR . expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 60
    termino    ir al estado 34
    factor     ir al estado 35


estado 45

   27 equmax: EQUMAX $@5 . PARA expresion $@6 PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 61


estado 46

   30 equmin: EQUMIN $@7 . PARA expresion $@8 PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 62


estado 47

   54 condicion: NOT comparacion .

    $default  reduce usando la regla 54 (condicion)


estado 48

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   49 factor: PARA expresion . PARC

    OP_SUM    desplazar e ir al estado 49
    OP_RESTA  desplazar e ir al estado 50
    PARC      desplazar e ir al estado 63


estado 49

   44 expresion: expresion OP_SUM . termino

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    termino  ir al estado 64
    factor   ir al estado 35


estado 50

   45 expresion: expresion OP_RESTA . termino

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    termino  ir al estado 65
    factor   ir al estado 35


estado 51

   58 comparacion: expresion $@9 . comparador expresion

    MENOR_IGUAL  desplazar e ir al estado 66
    MAYOR_IGUAL  desplazar e ir al estado 67
    MENOR        desplazar e ir al estado 68
    MAYOR        desplazar e ir al estado 69
    DIFF         desplazar e ir al estado 70
    IGUAL        desplazar e ir al estado 71

    comparador  ir al estado 72


estado 52

   47 termino: termino OP_MULT . factor

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    factor  ir al estado 73


estado 53

   48 termino: termino OP_DIV . factor

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    factor  ir al estado 74


estado 54

   16 while: WHILE condicion $@1 . BEGINW programa $@2 ENDW

    BEGINW  desplazar e ir al estado 75


estado 55

   55 condicion: comparacion AND . comparacion

    ID      desplazar e ir al estado 24
    CTE_E   desplazar e ir al estado 25
    CTE_R   desplazar e ir al estado 26
    EQUMAX  desplazar e ir al estado 27
    EQUMIN  desplazar e ir al estado 28
    PARA    desplazar e ir al estado 30

    equmax       ir al estado 31
    equmin       ir al estado 32
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    comparacion  ir al estado 76


estado 56

   56 condicion: comparacion OR . comparacion

    ID      desplazar e ir al estado 24
    CTE_E   desplazar e ir al estado 25
    CTE_R   desplazar e ir al estado 26
    EQUMAX  desplazar e ir al estado 27
    EQUMIN  desplazar e ir al estado 28
    PARA    desplazar e ir al estado 30

    equmax       ir al estado 31
    equmin       ir al estado 32
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    comparacion  ir al estado 77


estado 57

   17 seleccion: IF condicion THEN . programa ENDIF
   20          | IF condicion THEN . programa $@3 ELSE $@4 programa ENDIF

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 78
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 58

   36 listaVarDec: ID .

    $default  reduce usando la regla 36 (listaVarDec)


estado 59

   21 declaracion: DIM CORCHA listaVarDec . CORCHC AS CORCHA listaType CORCHC
   37 listaVarDec: listaVarDec . COMA ID

    COMA    desplazar e ir al estado 79
    CORCHC  desplazar e ir al estado 80


estado 60

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   70 for: FOR ID IGUALFOR expresion . $@10 TO expresion $@11 salto $@12 programa NEXT ID

    OP_SUM    desplazar e ir al estado 49
    OP_RESTA  desplazar e ir al estado 50

    $default  reduce usando la regla 67 ($@10)

    $@10  ir al estado 81


estado 61

   27 equmax: EQUMAX $@5 PARA . expresion $@6 PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 82
    termino    ir al estado 34
    factor     ir al estado 35


estado 62

   30 equmin: EQUMIN $@7 PARA . expresion $@8 PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 83
    termino    ir al estado 34
    factor     ir al estado 35


estado 63

   49 factor: PARA expresion PARC .

    $default  reduce usando la regla 49 (factor)


estado 64

   44 expresion: expresion OP_SUM termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 52
    OP_DIV   desplazar e ir al estado 53

    $default  reduce usando la regla 44 (expresion)


estado 65

   45 expresion: expresion OP_RESTA termino .
   47 termino: termino . OP_MULT factor
   48        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 52
    OP_DIV   desplazar e ir al estado 53

    $default  reduce usando la regla 45 (expresion)


estado 66

   61 comparador: MENOR_IGUAL .

    $default  reduce usando la regla 61 (comparador)


estado 67

   62 comparador: MAYOR_IGUAL .

    $default  reduce usando la regla 62 (comparador)


estado 68

   63 comparador: MENOR .

    $default  reduce usando la regla 63 (comparador)


estado 69

   64 comparador: MAYOR .

    $default  reduce usando la regla 64 (comparador)


estado 70

   65 comparador: DIFF .

    $default  reduce usando la regla 65 (comparador)


estado 71

   66 comparador: IGUAL .

    $default  reduce usando la regla 66 (comparador)


estado 72

   58 comparacion: expresion $@9 comparador . expresion

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 84
    termino    ir al estado 34
    factor     ir al estado 35


estado 73

   47 termino: termino OP_MULT factor .

    $default  reduce usando la regla 47 (termino)


estado 74

   48 termino: termino OP_DIV factor .

    $default  reduce usando la regla 48 (termino)


estado 75

   16 while: WHILE condicion $@1 BEGINW . programa $@2 ENDW

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 85
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 76

   55 condicion: comparacion AND comparacion .

    $default  reduce usando la regla 55 (condicion)


estado 77

   56 condicion: comparacion OR comparacion .

    $default  reduce usando la regla 56 (condicion)


estado 78

    3 programa: programa . sentencia
   17 seleccion: IF condicion THEN programa . ENDIF
   20          | IF condicion THEN programa . $@3 ELSE $@4 programa ENDIF

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    ENDIF    desplazar e ir al estado 86
    DIM      desplazar e ir al estado 7

    $default  reduce usando la regla 18 ($@3)

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    $@3          ir al estado 87
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 79

   37 listaVarDec: listaVarDec COMA . ID

    ID  desplazar e ir al estado 88


estado 80

   21 declaracion: DIM CORCHA listaVarDec CORCHC . AS CORCHA listaType CORCHC

    AS  desplazar e ir al estado 89


estado 81

   70 for: FOR ID IGUALFOR expresion $@10 . TO expresion $@11 salto $@12 programa NEXT ID

    TO  desplazar e ir al estado 90


estado 82

   27 equmax: EQUMAX $@5 PARA expresion . $@6 PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    OP_SUM    desplazar e ir al estado 49
    OP_RESTA  desplazar e ir al estado 50

    $default  reduce usando la regla 26 ($@6)

    $@6  ir al estado 91


estado 83

   30 equmin: EQUMIN $@7 PARA expresion . $@8 PYC CORCHA listaEqu CORCHC PARC
   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino

    OP_SUM    desplazar e ir al estado 49
    OP_RESTA  desplazar e ir al estado 50

    $default  reduce usando la regla 29 ($@8)

    $@8  ir al estado 92


estado 84

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   58 comparacion: expresion $@9 comparador expresion .

    OP_SUM    desplazar e ir al estado 49
    OP_RESTA  desplazar e ir al estado 50

    $default  reduce usando la regla 58 (comparacion)


estado 85

    3 programa: programa . sentencia
   16 while: WHILE condicion $@1 BEGINW programa . $@2 ENDW

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    $default  reduce usando la regla 15 ($@2)

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    $@2          ir al estado 93
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 86

   17 seleccion: IF condicion THEN programa ENDIF .

    $default  reduce usando la regla 17 (seleccion)


estado 87

   20 seleccion: IF condicion THEN programa $@3 . ELSE $@4 programa ENDIF

    ELSE  desplazar e ir al estado 94


estado 88

   37 listaVarDec: listaVarDec COMA ID .

    $default  reduce usando la regla 37 (listaVarDec)


estado 89

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS . CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 95


estado 90

   70 for: FOR ID IGUALFOR expresion $@10 TO . expresion $@11 salto $@12 programa NEXT ID

    ID     desplazar e ir al estado 24
    CTE_E  desplazar e ir al estado 25
    CTE_R  desplazar e ir al estado 26
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 96
    termino    ir al estado 34
    factor     ir al estado 35


estado 91

   27 equmax: EQUMAX $@5 PARA expresion $@6 . PYC CORCHA listaEqu CORCHC PARC

    PYC  desplazar e ir al estado 97


estado 92

   30 equmin: EQUMIN $@7 PARA expresion $@8 . PYC CORCHA listaEqu CORCHC PARC

    PYC  desplazar e ir al estado 98


estado 93

   16 while: WHILE condicion $@1 BEGINW programa $@2 . ENDW

    ENDW  desplazar e ir al estado 99


estado 94

   20 seleccion: IF condicion THEN programa $@3 ELSE . $@4 programa ENDIF

    $default  reduce usando la regla 19 ($@4)

    $@4  ir al estado 100


estado 95

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA . listaType CORCHC

    INTEGER  desplazar e ir al estado 101
    STRING   desplazar e ir al estado 102
    REAL     desplazar e ir al estado 103

    listaType  ir al estado 104
    TYPE       ir al estado 105


estado 96

   44 expresion: expresion . OP_SUM termino
   45          | expresion . OP_RESTA termino
   70 for: FOR ID IGUALFOR expresion $@10 TO expresion . $@11 salto $@12 programa NEXT ID

    OP_SUM    desplazar e ir al estado 49
    OP_RESTA  desplazar e ir al estado 50

    $default  reduce usando la regla 68 ($@11)

    $@11  ir al estado 106


estado 97

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 107


estado 98

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 108


estado 99

   16 while: WHILE condicion $@1 BEGINW programa $@2 ENDW .

    $default  reduce usando la regla 16 (while)


estado 100

   20 seleccion: IF condicion THEN programa $@3 ELSE $@4 . programa ENDIF

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 109
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 101

   40 TYPE: INTEGER .

    $default  reduce usando la regla 40 (TYPE)


estado 102

   41 TYPE: STRING .

    $default  reduce usando la regla 41 (TYPE)


estado 103

   42 TYPE: REAL .

    $default  reduce usando la regla 42 (TYPE)


estado 104

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   39 listaType: listaType . COMA TYPE

    COMA    desplazar e ir al estado 110
    CORCHC  desplazar e ir al estado 111


estado 105

   38 listaType: TYPE .

    $default  reduce usando la regla 38 (listaType)


estado 106

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 . salto $@12 programa NEXT ID

    CORCHA  desplazar e ir al estado 112

    salto  ir al estado 113


estado 107

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 114
    CTE_E  desplazar e ir al estado 115
    CTE_R  desplazar e ir al estado 116

    listaEqu  ir al estado 117
    itemEqu   ir al estado 118


estado 108

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 114
    CTE_E  desplazar e ir al estado 115
    CTE_R  desplazar e ir al estado 116

    listaEqu  ir al estado 119
    itemEqu   ir al estado 118


estado 109

    3 programa: programa . sentencia
   20 seleccion: IF condicion THEN programa $@3 ELSE $@4 programa . ENDIF

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    ENDIF    desplazar e ir al estado 120
    DIM      desplazar e ir al estado 7

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 110

   39 listaType: listaType COMA . TYPE

    INTEGER  desplazar e ir al estado 101
    STRING   desplazar e ir al estado 102
    REAL     desplazar e ir al estado 103

    TYPE  ir al estado 121


estado 111

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC .

    $default  reduce usando la regla 21 (declaracion)


estado 112

   71 salto: CORCHA . CORCHC
   72      | CORCHA . CTE_E CORCHC

    CTE_E   desplazar e ir al estado 122
    CORCHC  desplazar e ir al estado 123


estado 113

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto . $@12 programa NEXT ID

    $default  reduce usando la regla 69 ($@12)

    $@12  ir al estado 124


estado 114

   33 itemEqu: ID .

    $default  reduce usando la regla 33 (itemEqu)


estado 115

   34 itemEqu: CTE_E .

    $default  reduce usando la regla 34 (itemEqu)


estado 116

   35 itemEqu: CTE_R .

    $default  reduce usando la regla 35 (itemEqu)


estado 117

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 125
    CORCHC  desplazar e ir al estado 126


estado 118

   31 listaEqu: itemEqu .

    $default  reduce usando la regla 31 (listaEqu)


estado 119

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA listaEqu . CORCHC PARC
   32 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 125
    CORCHC  desplazar e ir al estado 127


estado 120

   20 seleccion: IF condicion THEN programa $@3 ELSE $@4 programa ENDIF .

    $default  reduce usando la regla 20 (seleccion)


estado 121

   39 listaType: listaType COMA TYPE .

    $default  reduce usando la regla 39 (listaType)


estado 122

   72 salto: CORCHA CTE_E . CORCHC

    CORCHC  desplazar e ir al estado 128


estado 123

   71 salto: CORCHA CORCHC .

    $default  reduce usando la regla 71 (salto)


estado 124

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 . programa NEXT ID

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 129
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 125

   32 listaEqu: listaEqu COMA . itemEqu

    ID     desplazar e ir al estado 114
    CTE_E  desplazar e ir al estado 115
    CTE_R  desplazar e ir al estado 116

    itemEqu  ir al estado 130


estado 126

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 131


estado 127

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 132


estado 128

   72 salto: CORCHA CTE_E CORCHC .

    $default  reduce usando la regla 72 (salto)


estado 129

    3 programa: programa . sentencia
   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa . NEXT ID

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7
    NEXT     desplazar e ir al estado 133

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    while        ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    for          ir al estado 18


estado 130

   32 listaEqu: listaEqu COMA itemEqu .

    $default  reduce usando la regla 32 (listaEqu)


estado 131

   27 equmax: EQUMAX $@5 PARA expresion $@6 PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 27 (equmax)


estado 132

   30 equmin: EQUMIN $@7 PARA expresion $@8 PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 30 (equmin)


estado 133

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT . ID

    ID  desplazar e ir al estado 134


estado 134

   70 for: FOR ID IGUALFOR expresion $@10 TO expresion $@11 salto $@12 programa NEXT ID .

    $default  reduce usando la regla 70 (for)
