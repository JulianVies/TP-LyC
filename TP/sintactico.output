Terminals unused in grammar

   NOT
   LLAVEA
   LLAVEC


Estado 78 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 83 conflictos: 8 desplazamiento(s)/reducción(ones)
Estado 101 conflictos: 7 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: inicio $end

    1 inicio: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | iteracion
    6          | seleccion
    7          | declaracion
    8          | display
    9          | get
   10          | equmax
   11          | equmin

   12 $@1: /* vacío */

   13 asignacion: ID $@1 OP_ASIG expresion

   14 iteracion: WHILE condicion THEN programa

   15 seleccion: IF condicion THEN programa
   16          | IF condicion THEN programa ELSE programa

   17 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

   18 display: DISPLAY ID
   19        | DISPLAY CTE_S

   20 get: GET ID

   21 equmax: IF EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   22       | WHILE EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   23       | FOR EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC

   24 equmin: IF EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC
   25       | WHILE EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC
   26       | FOR EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

   27 listaEqu: itemEqu
   28         | listaEqu COMA itemEqu

   29 itemEqu: ID
   30        | CTE_E
   31        | CTE_R

   32 listaVarDec: ID
   33            | listaVarDec COMA ID

   34 listaType: TYPE
   35          | listaType COMA TYPE

   36 TYPE: INTEGER
   37     | STRING
   38     | REAL

   39 expresion: termino
   40          | expresion OP_SUM termino
   41          | expresion OP_RESTA termino

   42 termino: factor
   43        | termino OP_MULT factor
   44        | termino OP_DIV factor

   45 factor: PARA expresion PARC
   46       | ID
   47       | CTE_E
   48       | CTE_R

   49 condicion: comparacion
   50          | condicion AND comparacion
   51          | condicion OR comparacion

   52 comparacion: expresion comparador expresion

   53 comparador: MENOR_IGUAL
   54           | MAYOR_IGUAL
   55           | MENOR
   56           | MAYOR
   57           | DIFF
   58           | IGUAL


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 13 18 20 29 32 33 46
CTE_S (259) 19
CTE_E (260) 30 47
CTE_R (261) 31 48
GET (262) 20
DISPLAY (263) 18 19
EQUMAX (264) 21 22 23
EQUMIN (265) 24 25 26
FOR (266) 23 26
WHILE (267) 14 22 25
THEN (268) 14 15 16
IF (269) 15 16 21 24
ELSE (270) 16
NOT (271)
AND (272) 50
OR (273) 51
OP_ASIG (274) 13
COMA (275) 28 33 35
PYC (276) 21 22 23 24 25 26
OP_SUM (277) 40
OP_RESTA (278) 41
OP_MULT (279) 43
OP_DIV (280) 44
CORCHA (281) 17 21 22 23 24 25 26
CORCHC (282) 17 21 22 23 24 25 26
PARA (283) 21 22 23 24 25 26 45
PARC (284) 21 22 23 24 25 26 45
LLAVEA (285)
LLAVEC (286)
MENOR_IGUAL (287) 53
MAYOR_IGUAL (288) 54
MENOR (289) 55
MAYOR (290) 56
DIFF (291) 57
IGUAL (292) 58
DIM (293) 17
AS (294) 17
INTEGER (295) 36
STRING (296) 37
REAL (297) 38


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
inicio (44)
    en la izquierda: 1, en la derecha: 0
programa (45)
    en la izquierda: 2 3, en la derecha: 1 3 14 15 16
sentencia (46)
    en la izquierda: 4 5 6 7 8 9 10 11, en la derecha: 2 3
asignacion (47)
    en la izquierda: 13, en la derecha: 4
$@1 (48)
    en la izquierda: 12, en la derecha: 13
iteracion (49)
    en la izquierda: 14, en la derecha: 5
seleccion (50)
    en la izquierda: 15 16, en la derecha: 6
declaracion (51)
    en la izquierda: 17, en la derecha: 7
display (52)
    en la izquierda: 18 19, en la derecha: 8
get (53)
    en la izquierda: 20, en la derecha: 9
equmax (54)
    en la izquierda: 21 22 23, en la derecha: 10
equmin (55)
    en la izquierda: 24 25 26, en la derecha: 11
listaEqu (56)
    en la izquierda: 27 28, en la derecha: 21 22 23 24 25 26 28
itemEqu (57)
    en la izquierda: 29 30 31, en la derecha: 27 28
listaVarDec (58)
    en la izquierda: 32 33, en la derecha: 17 33
listaType (59)
    en la izquierda: 34 35, en la derecha: 17 35
TYPE (60)
    en la izquierda: 36 37 38, en la derecha: 34 35
expresion (61)
    en la izquierda: 39 40 41, en la derecha: 13 21 22 23 24 25 26
    40 41 45 52
termino (62)
    en la izquierda: 42 43 44, en la derecha: 39 40 41 43 44
factor (63)
    en la izquierda: 45 46 47 48, en la derecha: 42 43 44
condicion (64)
    en la izquierda: 49 50 51, en la derecha: 14 15 16 50 51
comparacion (65)
    en la izquierda: 52, en la derecha: 49 50 51
comparador (66)
    en la izquierda: 53 54 55 56 57 58, en la derecha: 52


estado 0

    0 $accept: . inicio $end

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    inicio       ir al estado 8
    programa     ir al estado 9
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    seleccion    ir al estado 13
    declaracion  ir al estado 14
    display      ir al estado 15
    get          ir al estado 16
    equmax       ir al estado 17
    equmin       ir al estado 18


estado 1

   13 asignacion: ID . $@1 OP_ASIG expresion

    $default  reduce usando la regla 12 ($@1)

    $@1  ir al estado 19


estado 2

   20 get: GET . ID

    ID  desplazar e ir al estado 20


estado 3

   18 display: DISPLAY . ID
   19        | DISPLAY . CTE_S

    ID     desplazar e ir al estado 21
    CTE_S  desplazar e ir al estado 22


estado 4

   23 equmax: FOR . EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   26 equmin: FOR . EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

    EQUMAX  desplazar e ir al estado 23
    EQUMIN  desplazar e ir al estado 24


estado 5

   14 iteracion: WHILE . condicion THEN programa
   22 equmax: WHILE . EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   25 equmin: WHILE . EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

    ID      desplazar e ir al estado 25
    CTE_E   desplazar e ir al estado 26
    CTE_R   desplazar e ir al estado 27
    EQUMAX  desplazar e ir al estado 28
    EQUMIN  desplazar e ir al estado 29
    PARA    desplazar e ir al estado 30

    expresion    ir al estado 31
    termino      ir al estado 32
    factor       ir al estado 33
    condicion    ir al estado 34
    comparacion  ir al estado 35


estado 6

   15 seleccion: IF . condicion THEN programa
   16          | IF . condicion THEN programa ELSE programa
   21 equmax: IF . EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC
   24 equmin: IF . EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

    ID      desplazar e ir al estado 25
    CTE_E   desplazar e ir al estado 26
    CTE_R   desplazar e ir al estado 27
    EQUMAX  desplazar e ir al estado 36
    EQUMIN  desplazar e ir al estado 37
    PARA    desplazar e ir al estado 30

    expresion    ir al estado 31
    termino      ir al estado 32
    factor       ir al estado 33
    condicion    ir al estado 38
    comparacion  ir al estado 35


estado 7

   17 declaracion: DIM . CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 39


estado 8

    0 $accept: inicio . $end

    $end  desplazar e ir al estado 40


estado 9

    1 inicio: programa .
    3 programa: programa . sentencia

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    $default  reduce usando la regla 1 (inicio)

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    seleccion    ir al estado 13
    declaracion  ir al estado 14
    display      ir al estado 15
    get          ir al estado 16
    equmax       ir al estado 17
    equmin       ir al estado 18


estado 10

    2 programa: sentencia .

    $default  reduce usando la regla 2 (programa)


estado 11

    4 sentencia: asignacion .

    $default  reduce usando la regla 4 (sentencia)


estado 12

    5 sentencia: iteracion .

    $default  reduce usando la regla 5 (sentencia)


estado 13

    6 sentencia: seleccion .

    $default  reduce usando la regla 6 (sentencia)


estado 14

    7 sentencia: declaracion .

    $default  reduce usando la regla 7 (sentencia)


estado 15

    8 sentencia: display .

    $default  reduce usando la regla 8 (sentencia)


estado 16

    9 sentencia: get .

    $default  reduce usando la regla 9 (sentencia)


estado 17

   10 sentencia: equmax .

    $default  reduce usando la regla 10 (sentencia)


estado 18

   11 sentencia: equmin .

    $default  reduce usando la regla 11 (sentencia)


estado 19

   13 asignacion: ID $@1 . OP_ASIG expresion

    OP_ASIG  desplazar e ir al estado 42


estado 20

   20 get: GET ID .

    $default  reduce usando la regla 20 (get)


estado 21

   18 display: DISPLAY ID .

    $default  reduce usando la regla 18 (display)


estado 22

   19 display: DISPLAY CTE_S .

    $default  reduce usando la regla 19 (display)


estado 23

   23 equmax: FOR EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 43


estado 24

   26 equmin: FOR EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 44


estado 25

   46 factor: ID .

    $default  reduce usando la regla 46 (factor)


estado 26

   47 factor: CTE_E .

    $default  reduce usando la regla 47 (factor)


estado 27

   48 factor: CTE_R .

    $default  reduce usando la regla 48 (factor)


estado 28

   22 equmax: WHILE EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 45


estado 29

   25 equmin: WHILE EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 46


estado 30

   45 factor: PARA . expresion PARC

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 47
    termino    ir al estado 32
    factor     ir al estado 33


estado 31

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   52 comparacion: expresion . comparador expresion

    OP_SUM       desplazar e ir al estado 48
    OP_RESTA     desplazar e ir al estado 49
    MENOR_IGUAL  desplazar e ir al estado 50
    MAYOR_IGUAL  desplazar e ir al estado 51
    MENOR        desplazar e ir al estado 52
    MAYOR        desplazar e ir al estado 53
    DIFF         desplazar e ir al estado 54
    IGUAL        desplazar e ir al estado 55

    comparador  ir al estado 56


estado 32

   39 expresion: termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 57
    OP_DIV   desplazar e ir al estado 58

    $default  reduce usando la regla 39 (expresion)


estado 33

   42 termino: factor .

    $default  reduce usando la regla 42 (termino)


estado 34

   14 iteracion: WHILE condicion . THEN programa
   50 condicion: condicion . AND comparacion
   51          | condicion . OR comparacion

    THEN  desplazar e ir al estado 59
    AND   desplazar e ir al estado 60
    OR    desplazar e ir al estado 61


estado 35

   49 condicion: comparacion .

    $default  reduce usando la regla 49 (condicion)


estado 36

   21 equmax: IF EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 62


estado 37

   24 equmin: IF EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 63


estado 38

   15 seleccion: IF condicion . THEN programa
   16          | IF condicion . THEN programa ELSE programa
   50 condicion: condicion . AND comparacion
   51          | condicion . OR comparacion

    THEN  desplazar e ir al estado 64
    AND   desplazar e ir al estado 60
    OR    desplazar e ir al estado 61


estado 39

   17 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID  desplazar e ir al estado 65

    listaVarDec  ir al estado 66


estado 40

    0 $accept: inicio $end .

    $default  aceptar


estado 41

    3 programa: programa sentencia .

    $default  reduce usando la regla 3 (programa)


estado 42

   13 asignacion: ID $@1 OP_ASIG . expresion

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 67
    termino    ir al estado 32
    factor     ir al estado 33


estado 43

   23 equmax: FOR EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 68
    termino    ir al estado 32
    factor     ir al estado 33


estado 44

   26 equmin: FOR EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 69
    termino    ir al estado 32
    factor     ir al estado 33


estado 45

   22 equmax: WHILE EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 70
    termino    ir al estado 32
    factor     ir al estado 33


estado 46

   25 equmin: WHILE EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 71
    termino    ir al estado 32
    factor     ir al estado 33


estado 47

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   45 factor: PARA expresion . PARC

    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49
    PARC      desplazar e ir al estado 72


estado 48

   40 expresion: expresion OP_SUM . termino

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    termino  ir al estado 73
    factor   ir al estado 33


estado 49

   41 expresion: expresion OP_RESTA . termino

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    termino  ir al estado 74
    factor   ir al estado 33


estado 50

   53 comparador: MENOR_IGUAL .

    $default  reduce usando la regla 53 (comparador)


estado 51

   54 comparador: MAYOR_IGUAL .

    $default  reduce usando la regla 54 (comparador)


estado 52

   55 comparador: MENOR .

    $default  reduce usando la regla 55 (comparador)


estado 53

   56 comparador: MAYOR .

    $default  reduce usando la regla 56 (comparador)


estado 54

   57 comparador: DIFF .

    $default  reduce usando la regla 57 (comparador)


estado 55

   58 comparador: IGUAL .

    $default  reduce usando la regla 58 (comparador)


estado 56

   52 comparacion: expresion comparador . expresion

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 75
    termino    ir al estado 32
    factor     ir al estado 33


estado 57

   43 termino: termino OP_MULT . factor

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    factor  ir al estado 76


estado 58

   44 termino: termino OP_DIV . factor

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    factor  ir al estado 77


estado 59

   14 iteracion: WHILE condicion THEN . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 78
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    seleccion    ir al estado 13
    declaracion  ir al estado 14
    display      ir al estado 15
    get          ir al estado 16
    equmax       ir al estado 17
    equmin       ir al estado 18


estado 60

   50 condicion: condicion AND . comparacion

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion    ir al estado 31
    termino      ir al estado 32
    factor       ir al estado 33
    comparacion  ir al estado 79


estado 61

   51 condicion: condicion OR . comparacion

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion    ir al estado 31
    termino      ir al estado 32
    factor       ir al estado 33
    comparacion  ir al estado 80


estado 62

   21 equmax: IF EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 81
    termino    ir al estado 32
    factor     ir al estado 33


estado 63

   24 equmin: IF EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 25
    CTE_E  desplazar e ir al estado 26
    CTE_R  desplazar e ir al estado 27
    PARA   desplazar e ir al estado 30

    expresion  ir al estado 82
    termino    ir al estado 32
    factor     ir al estado 33


estado 64

   15 seleccion: IF condicion THEN . programa
   16          | IF condicion THEN . programa ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 83
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    seleccion    ir al estado 13
    declaracion  ir al estado 14
    display      ir al estado 15
    get          ir al estado 16
    equmax       ir al estado 17
    equmin       ir al estado 18


estado 65

   32 listaVarDec: ID .

    $default  reduce usando la regla 32 (listaVarDec)


estado 66

   17 declaracion: DIM CORCHA listaVarDec . CORCHC AS CORCHA listaType CORCHC
   33 listaVarDec: listaVarDec . COMA ID

    COMA    desplazar e ir al estado 84
    CORCHC  desplazar e ir al estado 85


estado 67

   13 asignacion: ID $@1 OP_ASIG expresion .
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49

    $default  reduce usando la regla 13 (asignacion)


estado 68

   23 equmax: FOR EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 86
    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49


estado 69

   26 equmin: FOR EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 87
    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49


estado 70

   22 equmax: WHILE EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 88
    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49


estado 71

   25 equmin: WHILE EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 89
    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49


estado 72

   45 factor: PARA expresion PARC .

    $default  reduce usando la regla 45 (factor)


estado 73

   40 expresion: expresion OP_SUM termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 57
    OP_DIV   desplazar e ir al estado 58

    $default  reduce usando la regla 40 (expresion)


estado 74

   41 expresion: expresion OP_RESTA termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 57
    OP_DIV   desplazar e ir al estado 58

    $default  reduce usando la regla 41 (expresion)


estado 75

   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino
   52 comparacion: expresion comparador expresion .

    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49

    $default  reduce usando la regla 52 (comparacion)


estado 76

   43 termino: termino OP_MULT factor .

    $default  reduce usando la regla 43 (termino)


estado 77

   44 termino: termino OP_DIV factor .

    $default  reduce usando la regla 44 (termino)


estado 78

    3 programa: programa . sentencia
   14 iteracion: WHILE condicion THEN programa .

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    ID        [reduce usando la regla 14 (iteracion)]
    GET       [reduce usando la regla 14 (iteracion)]
    DISPLAY   [reduce usando la regla 14 (iteracion)]
    FOR       [reduce usando la regla 14 (iteracion)]
    WHILE     [reduce usando la regla 14 (iteracion)]
    IF        [reduce usando la regla 14 (iteracion)]
    DIM       [reduce usando la regla 14 (iteracion)]
    $default  reduce usando la regla 14 (iteracion)

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    seleccion    ir al estado 13
    declaracion  ir al estado 14
    display      ir al estado 15
    get          ir al estado 16
    equmax       ir al estado 17
    equmin       ir al estado 18


estado 79

   50 condicion: condicion AND comparacion .

    $default  reduce usando la regla 50 (condicion)


estado 80

   51 condicion: condicion OR comparacion .

    $default  reduce usando la regla 51 (condicion)


estado 81

   21 equmax: IF EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 90
    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49


estado 82

   24 equmin: IF EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   40 expresion: expresion . OP_SUM termino
   41          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 91
    OP_SUM    desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49


estado 83

    3 programa: programa . sentencia
   15 seleccion: IF condicion THEN programa .
   16          | IF condicion THEN programa . ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    ELSE     desplazar e ir al estado 92
    DIM      desplazar e ir al estado 7

    ID        [reduce usando la regla 15 (seleccion)]
    GET       [reduce usando la regla 15 (seleccion)]
    DISPLAY   [reduce usando la regla 15 (seleccion)]
    FOR       [reduce usando la regla 15 (seleccion)]
    WHILE     [reduce usando la regla 15 (seleccion)]
    IF        [reduce usando la regla 15 (seleccion)]
    ELSE      [reduce usando la regla 15 (seleccion)]
    DIM       [reduce usando la regla 15 (seleccion)]
    $default  reduce usando la regla 15 (seleccion)

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    seleccion    ir al estado 13
    declaracion  ir al estado 14
    display      ir al estado 15
    get          ir al estado 16
    equmax       ir al estado 17
    equmin       ir al estado 18


estado 84

   33 listaVarDec: listaVarDec COMA . ID

    ID  desplazar e ir al estado 93


estado 85

   17 declaracion: DIM CORCHA listaVarDec CORCHC . AS CORCHA listaType CORCHC

    AS  desplazar e ir al estado 94


estado 86

   23 equmax: FOR EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 95


estado 87

   26 equmin: FOR EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 96


estado 88

   22 equmax: WHILE EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 97


estado 89

   25 equmin: WHILE EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 98


estado 90

   21 equmax: IF EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 99


estado 91

   24 equmin: IF EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 100


estado 92

   16 seleccion: IF condicion THEN programa ELSE . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    programa     ir al estado 101
    sentencia    ir al estado 10
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    seleccion    ir al estado 13
    declaracion  ir al estado 14
    display      ir al estado 15
    get          ir al estado 16
    equmax       ir al estado 17
    equmin       ir al estado 18


estado 93

   33 listaVarDec: listaVarDec COMA ID .

    $default  reduce usando la regla 33 (listaVarDec)


estado 94

   17 declaracion: DIM CORCHA listaVarDec CORCHC AS . CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 102


estado 95

   23 equmax: FOR EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 103
    CTE_E  desplazar e ir al estado 104
    CTE_R  desplazar e ir al estado 105

    listaEqu  ir al estado 106
    itemEqu   ir al estado 107


estado 96

   26 equmin: FOR EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 103
    CTE_E  desplazar e ir al estado 104
    CTE_R  desplazar e ir al estado 105

    listaEqu  ir al estado 108
    itemEqu   ir al estado 107


estado 97

   22 equmax: WHILE EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 103
    CTE_E  desplazar e ir al estado 104
    CTE_R  desplazar e ir al estado 105

    listaEqu  ir al estado 109
    itemEqu   ir al estado 107


estado 98

   25 equmin: WHILE EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 103
    CTE_E  desplazar e ir al estado 104
    CTE_R  desplazar e ir al estado 105

    listaEqu  ir al estado 110
    itemEqu   ir al estado 107


estado 99

   21 equmax: IF EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 103
    CTE_E  desplazar e ir al estado 104
    CTE_R  desplazar e ir al estado 105

    listaEqu  ir al estado 111
    itemEqu   ir al estado 107


estado 100

   24 equmin: IF EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 103
    CTE_E  desplazar e ir al estado 104
    CTE_R  desplazar e ir al estado 105

    listaEqu  ir al estado 112
    itemEqu   ir al estado 107


estado 101

    3 programa: programa . sentencia
   16 seleccion: IF condicion THEN programa ELSE programa .

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    WHILE    desplazar e ir al estado 5
    IF       desplazar e ir al estado 6
    DIM      desplazar e ir al estado 7

    ID        [reduce usando la regla 16 (seleccion)]
    GET       [reduce usando la regla 16 (seleccion)]
    DISPLAY   [reduce usando la regla 16 (seleccion)]
    FOR       [reduce usando la regla 16 (seleccion)]
    WHILE     [reduce usando la regla 16 (seleccion)]
    IF        [reduce usando la regla 16 (seleccion)]
    DIM       [reduce usando la regla 16 (seleccion)]
    $default  reduce usando la regla 16 (seleccion)

    sentencia    ir al estado 41
    asignacion   ir al estado 11
    iteracion    ir al estado 12
    seleccion    ir al estado 13
    declaracion  ir al estado 14
    display      ir al estado 15
    get          ir al estado 16
    equmax       ir al estado 17
    equmin       ir al estado 18


estado 102

   17 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA . listaType CORCHC

    INTEGER  desplazar e ir al estado 113
    STRING   desplazar e ir al estado 114
    REAL     desplazar e ir al estado 115

    listaType  ir al estado 116
    TYPE       ir al estado 117


estado 103

   29 itemEqu: ID .

    $default  reduce usando la regla 29 (itemEqu)


estado 104

   30 itemEqu: CTE_E .

    $default  reduce usando la regla 30 (itemEqu)


estado 105

   31 itemEqu: CTE_R .

    $default  reduce usando la regla 31 (itemEqu)


estado 106

   23 equmax: FOR EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 118
    CORCHC  desplazar e ir al estado 119


estado 107

   27 listaEqu: itemEqu .

    $default  reduce usando la regla 27 (listaEqu)


estado 108

   26 equmin: FOR EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 118
    CORCHC  desplazar e ir al estado 120


estado 109

   22 equmax: WHILE EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 118
    CORCHC  desplazar e ir al estado 121


estado 110

   25 equmin: WHILE EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 118
    CORCHC  desplazar e ir al estado 122


estado 111

   21 equmax: IF EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 118
    CORCHC  desplazar e ir al estado 123


estado 112

   24 equmin: IF EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   28 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 118
    CORCHC  desplazar e ir al estado 124


estado 113

   36 TYPE: INTEGER .

    $default  reduce usando la regla 36 (TYPE)


estado 114

   37 TYPE: STRING .

    $default  reduce usando la regla 37 (TYPE)


estado 115

   38 TYPE: REAL .

    $default  reduce usando la regla 38 (TYPE)


estado 116

   17 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   35 listaType: listaType . COMA TYPE

    COMA    desplazar e ir al estado 125
    CORCHC  desplazar e ir al estado 126


estado 117

   34 listaType: TYPE .

    $default  reduce usando la regla 34 (listaType)


estado 118

   28 listaEqu: listaEqu COMA . itemEqu

    ID     desplazar e ir al estado 103
    CTE_E  desplazar e ir al estado 104
    CTE_R  desplazar e ir al estado 105

    itemEqu  ir al estado 127


estado 119

   23 equmax: FOR EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 128


estado 120

   26 equmin: FOR EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 129


estado 121

   22 equmax: WHILE EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 130


estado 122

   25 equmin: WHILE EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 131


estado 123

   21 equmax: IF EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 132


estado 124

   24 equmin: IF EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 133


estado 125

   35 listaType: listaType COMA . TYPE

    INTEGER  desplazar e ir al estado 113
    STRING   desplazar e ir al estado 114
    REAL     desplazar e ir al estado 115

    TYPE  ir al estado 134


estado 126

   17 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC .

    $default  reduce usando la regla 17 (declaracion)


estado 127

   28 listaEqu: listaEqu COMA itemEqu .

    $default  reduce usando la regla 28 (listaEqu)


estado 128

   23 equmax: FOR EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 23 (equmax)


estado 129

   26 equmin: FOR EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 26 (equmin)


estado 130

   22 equmax: WHILE EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 22 (equmax)


estado 131

   25 equmin: WHILE EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 25 (equmin)


estado 132

   21 equmax: IF EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 21 (equmax)


estado 133

   24 equmin: IF EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 24 (equmin)


estado 134

   35 listaType: listaType COMA TYPE .

    $default  reduce usando la regla 35 (listaType)
