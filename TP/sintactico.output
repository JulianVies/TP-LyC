Terminals unused in grammar

   ENDIF
   LLAVEA
   LLAVEC


Estado 82 conflictos: 10 desplazamiento(s)/reducción(ones)
Estado 101 conflictos: 9 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: inicio $end

    1 inicio: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | iteracion
    6          | seleccion
    7          | declaracion
    8          | display
    9          | get
   10          | equmax
   11          | equmin

   12 asignacion: ID OP_ASIG expresion
   13           | ID OP_ASIG CTE_S

   14 iteracion: while
   15          | for

   16 $@1: /* vacío */

   17 while: WHILE condicion $@1 BEGINW programa ENDW

   18 seleccion: IF condicion THEN programa
   19          | IF condicion THEN programa ELSE programa

   20 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

   21 display: DISPLAY ID
   22        | DISPLAY CTE_S

   23 get: GET ID

   24 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC

   25 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

   26 listaEqu: itemEqu
   27         | listaEqu COMA itemEqu

   28 itemEqu: ID
   29        | CTE_E
   30        | CTE_R

   31 listaVarDec: ID
   32            | listaVarDec COMA ID

   33 listaType: TYPE
   34          | listaType COMA TYPE

   35 TYPE: INTEGER
   36     | STRING
   37     | REAL

   38 expresion: termino
   39          | expresion OP_SUM termino
   40          | expresion OP_RESTA termino

   41 termino: factor
   42        | termino OP_MULT factor
   43        | termino OP_DIV factor

   44 factor: PARA expresion PARC
   45       | ID
   46       | CTE_E
   47       | CTE_R

   48 condicion: comparacion
   49          | NOT comparacion
   50          | comparacion AND comparacion
   51          | comparacion OR comparacion

   52 $@2: /* vacío */

   53 comparacion: expresion $@2 comparador expresion
   54            | equmax
   55            | equmin

   56 comparador: MENOR_IGUAL
   57           | MAYOR_IGUAL
   58           | MENOR
   59           | MAYOR
   60           | DIFF
   61           | IGUAL

   62 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   63    | FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 12 13 21 23 28 31 32 45 62 63
CTE_S (259) 13 22
CTE_E (260) 29 46 62
CTE_R (261) 30 47
GET (262) 23
DISPLAY (263) 21 22
EQUMAX (264) 24
EQUMIN (265) 25
FOR (266) 62 63
WHILE (267) 17
BEGINW (268) 17
ENDW (269) 17
THEN (270) 18 19
IF (271) 18 19
ELSE (272) 19
ENDIF (273)
NOT (274) 49
AND (275) 50
OR (276) 51
OP_ASIG (277) 12 13
COMA (278) 27 32 34
PYC (279) 24 25
OP_SUM (280) 39
OP_RESTA (281) 40
OP_MULT (282) 42
OP_DIV (283) 43
CORCHA (284) 20 24 25 62 63
CORCHC (285) 20 24 25 62 63
PARA (286) 24 25 44
PARC (287) 24 25 44
LLAVEA (288)
LLAVEC (289)
MENOR_IGUAL (290) 56
MAYOR_IGUAL (291) 57
MENOR (292) 58
MAYOR (293) 59
DIFF (294) 60
IGUAL (295) 61
IGUALFOR (296) 62 63
DIM (297) 20
AS (298) 20
TO (299) 62 63
NEXT (300) 62 63
INTEGER (301) 35
STRING (302) 36
REAL (303) 37


No terminales con las reglas donde aparecen

$accept (49)
    en la izquierda: 0
inicio (50)
    en la izquierda: 1, en la derecha: 0
programa (51)
    en la izquierda: 2 3, en la derecha: 1 3 17 18 19
sentencia (52)
    en la izquierda: 4 5 6 7 8 9 10 11, en la derecha: 2 3
asignacion (53)
    en la izquierda: 12 13, en la derecha: 4
iteracion (54)
    en la izquierda: 14 15, en la derecha: 5
while (55)
    en la izquierda: 17, en la derecha: 14
$@1 (56)
    en la izquierda: 16, en la derecha: 17
seleccion (57)
    en la izquierda: 18 19, en la derecha: 6
declaracion (58)
    en la izquierda: 20, en la derecha: 7
display (59)
    en la izquierda: 21 22, en la derecha: 8
get (60)
    en la izquierda: 23, en la derecha: 9
equmax (61)
    en la izquierda: 24, en la derecha: 10 54
equmin (62)
    en la izquierda: 25, en la derecha: 11 55
listaEqu (63)
    en la izquierda: 26 27, en la derecha: 24 25 27
itemEqu (64)
    en la izquierda: 28 29 30, en la derecha: 26 27
listaVarDec (65)
    en la izquierda: 31 32, en la derecha: 20 32
listaType (66)
    en la izquierda: 33 34, en la derecha: 20 34
TYPE (67)
    en la izquierda: 35 36 37, en la derecha: 33 34
expresion (68)
    en la izquierda: 38 39 40, en la derecha: 12 24 25 39 40 44 53
    62 63
termino (69)
    en la izquierda: 41 42 43, en la derecha: 38 39 40 42 43
factor (70)
    en la izquierda: 44 45 46 47, en la derecha: 41 42 43
condicion (71)
    en la izquierda: 48 49 50 51, en la derecha: 17 18 19
comparacion (72)
    en la izquierda: 53 54 55, en la derecha: 48 49 50 51
$@2 (73)
    en la izquierda: 52, en la derecha: 53
comparador (74)
    en la izquierda: 56 57 58 59 60 61, en la derecha: 53
for (75)
    en la izquierda: 62 63, en la derecha: 15


estado 0

    0 $accept: . inicio $end

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    inicio       ir al estado 10
    programa     ir al estado 11
    sentencia    ir al estado 12
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 1

   12 asignacion: ID . OP_ASIG expresion
   13           | ID . OP_ASIG CTE_S

    OP_ASIG  desplazar e ir al estado 23


estado 2

   23 get: GET . ID

    ID  desplazar e ir al estado 24


estado 3

   21 display: DISPLAY . ID
   22        | DISPLAY . CTE_S

    ID     desplazar e ir al estado 25
    CTE_S  desplazar e ir al estado 26


estado 4

   24 equmax: EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 27


estado 5

   25 equmin: EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 28


estado 6

   62 for: FOR . ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   63    | FOR . ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID

    ID  desplazar e ir al estado 29


estado 7

   17 while: WHILE . condicion $@1 BEGINW programa ENDW

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    NOT     desplazar e ir al estado 33
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    condicion    ir al estado 40
    comparacion  ir al estado 41


estado 8

   18 seleccion: IF . condicion THEN programa
   19          | IF . condicion THEN programa ELSE programa

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    NOT     desplazar e ir al estado 33
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    condicion    ir al estado 42
    comparacion  ir al estado 41


estado 9

   20 declaracion: DIM . CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 43


estado 10

    0 $accept: inicio . $end

    $end  desplazar e ir al estado 44


estado 11

    1 inicio: programa .
    3 programa: programa . sentencia

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    $default  reduce usando la regla 1 (inicio)

    sentencia    ir al estado 45
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 12

    2 programa: sentencia .

    $default  reduce usando la regla 2 (programa)


estado 13

    4 sentencia: asignacion .

    $default  reduce usando la regla 4 (sentencia)


estado 14

    5 sentencia: iteracion .

    $default  reduce usando la regla 5 (sentencia)


estado 15

   14 iteracion: while .

    $default  reduce usando la regla 14 (iteracion)


estado 16

    6 sentencia: seleccion .

    $default  reduce usando la regla 6 (sentencia)


estado 17

    7 sentencia: declaracion .

    $default  reduce usando la regla 7 (sentencia)


estado 18

    8 sentencia: display .

    $default  reduce usando la regla 8 (sentencia)


estado 19

    9 sentencia: get .

    $default  reduce usando la regla 9 (sentencia)


estado 20

   10 sentencia: equmax .

    $default  reduce usando la regla 10 (sentencia)


estado 21

   11 sentencia: equmin .

    $default  reduce usando la regla 11 (sentencia)


estado 22

   15 iteracion: for .

    $default  reduce usando la regla 15 (iteracion)


estado 23

   12 asignacion: ID OP_ASIG . expresion
   13           | ID OP_ASIG . CTE_S

    ID     desplazar e ir al estado 30
    CTE_S  desplazar e ir al estado 46
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 47
    termino    ir al estado 38
    factor     ir al estado 39


estado 24

   23 get: GET ID .

    $default  reduce usando la regla 23 (get)


estado 25

   21 display: DISPLAY ID .

    $default  reduce usando la regla 21 (display)


estado 26

   22 display: DISPLAY CTE_S .

    $default  reduce usando la regla 22 (display)


estado 27

   24 equmax: EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 48
    termino    ir al estado 38
    factor     ir al estado 39


estado 28

   25 equmin: EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 49
    termino    ir al estado 38
    factor     ir al estado 39


estado 29

   62 for: FOR ID . IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   63    | FOR ID . IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID

    IGUALFOR  desplazar e ir al estado 50


estado 30

   45 factor: ID .

    $default  reduce usando la regla 45 (factor)


estado 31

   46 factor: CTE_E .

    $default  reduce usando la regla 46 (factor)


estado 32

   47 factor: CTE_R .

    $default  reduce usando la regla 47 (factor)


estado 33

   49 condicion: NOT . comparacion

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    comparacion  ir al estado 51


estado 34

   44 factor: PARA . expresion PARC

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 52
    termino    ir al estado 38
    factor     ir al estado 39


estado 35

   54 comparacion: equmax .

    $default  reduce usando la regla 54 (comparacion)


estado 36

   55 comparacion: equmin .

    $default  reduce usando la regla 55 (comparacion)


estado 37

   39 expresion: expresion . OP_SUM termino
   40          | expresion . OP_RESTA termino
   53 comparacion: expresion . $@2 comparador expresion

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54

    $default  reduce usando la regla 52 ($@2)

    $@2  ir al estado 55


estado 38

   38 expresion: termino .
   42 termino: termino . OP_MULT factor
   43        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 38 (expresion)


estado 39

   41 termino: factor .

    $default  reduce usando la regla 41 (termino)


estado 40

   17 while: WHILE condicion . $@1 BEGINW programa ENDW

    $default  reduce usando la regla 16 ($@1)

    $@1  ir al estado 58


estado 41

   48 condicion: comparacion .
   50          | comparacion . AND comparacion
   51          | comparacion . OR comparacion

    AND  desplazar e ir al estado 59
    OR   desplazar e ir al estado 60

    $default  reduce usando la regla 48 (condicion)


estado 42

   18 seleccion: IF condicion . THEN programa
   19          | IF condicion . THEN programa ELSE programa

    THEN  desplazar e ir al estado 61


estado 43

   20 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID  desplazar e ir al estado 62

    listaVarDec  ir al estado 63


estado 44

    0 $accept: inicio $end .

    $default  aceptar


estado 45

    3 programa: programa sentencia .

    $default  reduce usando la regla 3 (programa)


estado 46

   13 asignacion: ID OP_ASIG CTE_S .

    $default  reduce usando la regla 13 (asignacion)


estado 47

   12 asignacion: ID OP_ASIG expresion .
   39 expresion: expresion . OP_SUM termino
   40          | expresion . OP_RESTA termino

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54

    $default  reduce usando la regla 12 (asignacion)


estado 48

   24 equmax: EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   39 expresion: expresion . OP_SUM termino
   40          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 64
    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54


estado 49

   25 equmin: EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   39 expresion: expresion . OP_SUM termino
   40          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 65
    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54


estado 50

   62 for: FOR ID IGUALFOR . expresion TO expresion CORCHA CTE_E CORCHC NEXT ID
   63    | FOR ID IGUALFOR . expresion TO expresion CORCHA CORCHC NEXT ID

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 66
    termino    ir al estado 38
    factor     ir al estado 39


estado 51

   49 condicion: NOT comparacion .

    $default  reduce usando la regla 49 (condicion)


estado 52

   39 expresion: expresion . OP_SUM termino
   40          | expresion . OP_RESTA termino
   44 factor: PARA expresion . PARC

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54
    PARC      desplazar e ir al estado 67


estado 53

   39 expresion: expresion OP_SUM . termino

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    termino  ir al estado 68
    factor   ir al estado 39


estado 54

   40 expresion: expresion OP_RESTA . termino

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    termino  ir al estado 69
    factor   ir al estado 39


estado 55

   53 comparacion: expresion $@2 . comparador expresion

    MENOR_IGUAL  desplazar e ir al estado 70
    MAYOR_IGUAL  desplazar e ir al estado 71
    MENOR        desplazar e ir al estado 72
    MAYOR        desplazar e ir al estado 73
    DIFF         desplazar e ir al estado 74
    IGUAL        desplazar e ir al estado 75

    comparador  ir al estado 76


estado 56

   42 termino: termino OP_MULT . factor

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    factor  ir al estado 77


estado 57

   43 termino: termino OP_DIV . factor

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    factor  ir al estado 78


estado 58

   17 while: WHILE condicion $@1 . BEGINW programa ENDW

    BEGINW  desplazar e ir al estado 79


estado 59

   50 condicion: comparacion AND . comparacion

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    comparacion  ir al estado 80


estado 60

   51 condicion: comparacion OR . comparacion

    ID      desplazar e ir al estado 30
    CTE_E   desplazar e ir al estado 31
    CTE_R   desplazar e ir al estado 32
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 34

    equmax       ir al estado 35
    equmin       ir al estado 36
    expresion    ir al estado 37
    termino      ir al estado 38
    factor       ir al estado 39
    comparacion  ir al estado 81


estado 61

   18 seleccion: IF condicion THEN . programa
   19          | IF condicion THEN . programa ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    programa     ir al estado 82
    sentencia    ir al estado 12
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 62

   31 listaVarDec: ID .

    $default  reduce usando la regla 31 (listaVarDec)


estado 63

   20 declaracion: DIM CORCHA listaVarDec . CORCHC AS CORCHA listaType CORCHC
   32 listaVarDec: listaVarDec . COMA ID

    COMA    desplazar e ir al estado 83
    CORCHC  desplazar e ir al estado 84


estado 64

   24 equmax: EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 85


estado 65

   25 equmin: EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 86


estado 66

   39 expresion: expresion . OP_SUM termino
   40          | expresion . OP_RESTA termino
   62 for: FOR ID IGUALFOR expresion . TO expresion CORCHA CTE_E CORCHC NEXT ID
   63    | FOR ID IGUALFOR expresion . TO expresion CORCHA CORCHC NEXT ID

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54
    TO        desplazar e ir al estado 87


estado 67

   44 factor: PARA expresion PARC .

    $default  reduce usando la regla 44 (factor)


estado 68

   39 expresion: expresion OP_SUM termino .
   42 termino: termino . OP_MULT factor
   43        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 39 (expresion)


estado 69

   40 expresion: expresion OP_RESTA termino .
   42 termino: termino . OP_MULT factor
   43        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 40 (expresion)


estado 70

   56 comparador: MENOR_IGUAL .

    $default  reduce usando la regla 56 (comparador)


estado 71

   57 comparador: MAYOR_IGUAL .

    $default  reduce usando la regla 57 (comparador)


estado 72

   58 comparador: MENOR .

    $default  reduce usando la regla 58 (comparador)


estado 73

   59 comparador: MAYOR .

    $default  reduce usando la regla 59 (comparador)


estado 74

   60 comparador: DIFF .

    $default  reduce usando la regla 60 (comparador)


estado 75

   61 comparador: IGUAL .

    $default  reduce usando la regla 61 (comparador)


estado 76

   53 comparacion: expresion $@2 comparador . expresion

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 88
    termino    ir al estado 38
    factor     ir al estado 39


estado 77

   42 termino: termino OP_MULT factor .

    $default  reduce usando la regla 42 (termino)


estado 78

   43 termino: termino OP_DIV factor .

    $default  reduce usando la regla 43 (termino)


estado 79

   17 while: WHILE condicion $@1 BEGINW . programa ENDW

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    programa     ir al estado 89
    sentencia    ir al estado 12
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 80

   50 condicion: comparacion AND comparacion .

    $default  reduce usando la regla 50 (condicion)


estado 81

   51 condicion: comparacion OR comparacion .

    $default  reduce usando la regla 51 (condicion)


estado 82

    3 programa: programa . sentencia
   18 seleccion: IF condicion THEN programa .
   19          | IF condicion THEN programa . ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    ELSE     desplazar e ir al estado 90
    DIM      desplazar e ir al estado 9

    ID        [reduce usando la regla 18 (seleccion)]
    GET       [reduce usando la regla 18 (seleccion)]
    DISPLAY   [reduce usando la regla 18 (seleccion)]
    EQUMAX    [reduce usando la regla 18 (seleccion)]
    EQUMIN    [reduce usando la regla 18 (seleccion)]
    FOR       [reduce usando la regla 18 (seleccion)]
    WHILE     [reduce usando la regla 18 (seleccion)]
    IF        [reduce usando la regla 18 (seleccion)]
    ELSE      [reduce usando la regla 18 (seleccion)]
    DIM       [reduce usando la regla 18 (seleccion)]
    $default  reduce usando la regla 18 (seleccion)

    sentencia    ir al estado 45
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 83

   32 listaVarDec: listaVarDec COMA . ID

    ID  desplazar e ir al estado 91


estado 84

   20 declaracion: DIM CORCHA listaVarDec CORCHC . AS CORCHA listaType CORCHC

    AS  desplazar e ir al estado 92


estado 85

   24 equmax: EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 93
    CTE_E  desplazar e ir al estado 94
    CTE_R  desplazar e ir al estado 95

    listaEqu  ir al estado 96
    itemEqu   ir al estado 97


estado 86

   25 equmin: EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 93
    CTE_E  desplazar e ir al estado 94
    CTE_R  desplazar e ir al estado 95

    listaEqu  ir al estado 98
    itemEqu   ir al estado 97


estado 87

   62 for: FOR ID IGUALFOR expresion TO . expresion CORCHA CTE_E CORCHC NEXT ID
   63    | FOR ID IGUALFOR expresion TO . expresion CORCHA CORCHC NEXT ID

    ID     desplazar e ir al estado 30
    CTE_E  desplazar e ir al estado 31
    CTE_R  desplazar e ir al estado 32
    PARA   desplazar e ir al estado 34

    expresion  ir al estado 99
    termino    ir al estado 38
    factor     ir al estado 39


estado 88

   39 expresion: expresion . OP_SUM termino
   40          | expresion . OP_RESTA termino
   53 comparacion: expresion $@2 comparador expresion .

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54

    $default  reduce usando la regla 53 (comparacion)


estado 89

    3 programa: programa . sentencia
   17 while: WHILE condicion $@1 BEGINW programa . ENDW

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    ENDW     desplazar e ir al estado 100
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    sentencia    ir al estado 45
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 90

   19 seleccion: IF condicion THEN programa ELSE . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    programa     ir al estado 101
    sentencia    ir al estado 12
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 91

   32 listaVarDec: listaVarDec COMA ID .

    $default  reduce usando la regla 32 (listaVarDec)


estado 92

   20 declaracion: DIM CORCHA listaVarDec CORCHC AS . CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 102


estado 93

   28 itemEqu: ID .

    $default  reduce usando la regla 28 (itemEqu)


estado 94

   29 itemEqu: CTE_E .

    $default  reduce usando la regla 29 (itemEqu)


estado 95

   30 itemEqu: CTE_R .

    $default  reduce usando la regla 30 (itemEqu)


estado 96

   24 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   27 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 103
    CORCHC  desplazar e ir al estado 104


estado 97

   26 listaEqu: itemEqu .

    $default  reduce usando la regla 26 (listaEqu)


estado 98

   25 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   27 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 103
    CORCHC  desplazar e ir al estado 105


estado 99

   39 expresion: expresion . OP_SUM termino
   40          | expresion . OP_RESTA termino
   62 for: FOR ID IGUALFOR expresion TO expresion . CORCHA CTE_E CORCHC NEXT ID
   63    | FOR ID IGUALFOR expresion TO expresion . CORCHA CORCHC NEXT ID

    OP_SUM    desplazar e ir al estado 53
    OP_RESTA  desplazar e ir al estado 54
    CORCHA    desplazar e ir al estado 106


estado 100

   17 while: WHILE condicion $@1 BEGINW programa ENDW .

    $default  reduce usando la regla 17 (while)


estado 101

    3 programa: programa . sentencia
   19 seleccion: IF condicion THEN programa ELSE programa .

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    FOR      desplazar e ir al estado 6
    WHILE    desplazar e ir al estado 7
    IF       desplazar e ir al estado 8
    DIM      desplazar e ir al estado 9

    ID        [reduce usando la regla 19 (seleccion)]
    GET       [reduce usando la regla 19 (seleccion)]
    DISPLAY   [reduce usando la regla 19 (seleccion)]
    EQUMAX    [reduce usando la regla 19 (seleccion)]
    EQUMIN    [reduce usando la regla 19 (seleccion)]
    FOR       [reduce usando la regla 19 (seleccion)]
    WHILE     [reduce usando la regla 19 (seleccion)]
    IF        [reduce usando la regla 19 (seleccion)]
    DIM       [reduce usando la regla 19 (seleccion)]
    $default  reduce usando la regla 19 (seleccion)

    sentencia    ir al estado 45
    asignacion   ir al estado 13
    iteracion    ir al estado 14
    while        ir al estado 15
    seleccion    ir al estado 16
    declaracion  ir al estado 17
    display      ir al estado 18
    get          ir al estado 19
    equmax       ir al estado 20
    equmin       ir al estado 21
    for          ir al estado 22


estado 102

   20 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA . listaType CORCHC

    INTEGER  desplazar e ir al estado 107
    STRING   desplazar e ir al estado 108
    REAL     desplazar e ir al estado 109

    listaType  ir al estado 110
    TYPE       ir al estado 111


estado 103

   27 listaEqu: listaEqu COMA . itemEqu

    ID     desplazar e ir al estado 93
    CTE_E  desplazar e ir al estado 94
    CTE_R  desplazar e ir al estado 95

    itemEqu  ir al estado 112


estado 104

   24 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 113


estado 105

   25 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 114


estado 106

   62 for: FOR ID IGUALFOR expresion TO expresion CORCHA . CTE_E CORCHC NEXT ID
   63    | FOR ID IGUALFOR expresion TO expresion CORCHA . CORCHC NEXT ID

    CTE_E   desplazar e ir al estado 115
    CORCHC  desplazar e ir al estado 116


estado 107

   35 TYPE: INTEGER .

    $default  reduce usando la regla 35 (TYPE)


estado 108

   36 TYPE: STRING .

    $default  reduce usando la regla 36 (TYPE)


estado 109

   37 TYPE: REAL .

    $default  reduce usando la regla 37 (TYPE)


estado 110

   20 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   34 listaType: listaType . COMA TYPE

    COMA    desplazar e ir al estado 117
    CORCHC  desplazar e ir al estado 118


estado 111

   33 listaType: TYPE .

    $default  reduce usando la regla 33 (listaType)


estado 112

   27 listaEqu: listaEqu COMA itemEqu .

    $default  reduce usando la regla 27 (listaEqu)


estado 113

   24 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 24 (equmax)


estado 114

   25 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 25 (equmin)


estado 115

   62 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E . CORCHC NEXT ID

    CORCHC  desplazar e ir al estado 119


estado 116

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC . NEXT ID

    NEXT  desplazar e ir al estado 120


estado 117

   34 listaType: listaType COMA . TYPE

    INTEGER  desplazar e ir al estado 107
    STRING   desplazar e ir al estado 108
    REAL     desplazar e ir al estado 109

    TYPE  ir al estado 121


estado 118

   20 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC .

    $default  reduce usando la regla 20 (declaracion)


estado 119

   62 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC . NEXT ID

    NEXT  desplazar e ir al estado 122


estado 120

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT . ID

    ID  desplazar e ir al estado 123


estado 121

   34 listaType: listaType COMA TYPE .

    $default  reduce usando la regla 34 (listaType)


estado 122

   62 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT . ID

    ID  desplazar e ir al estado 124


estado 123

   63 for: FOR ID IGUALFOR expresion TO expresion CORCHA CORCHC NEXT ID .

    $default  reduce usando la regla 63 (for)


estado 124

   62 for: FOR ID IGUALFOR expresion TO expresion CORCHA CTE_E CORCHC NEXT ID .

    $default  reduce usando la regla 62 (for)
