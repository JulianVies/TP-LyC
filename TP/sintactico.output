Terminals unused in grammar

   FOR
   NOT
   LLAVEA
   LLAVEC


Estado 71 conflictos: 8 desplazamiento(s)/reducci�n(ones)
Estado 74 conflictos: 9 desplazamiento(s)/reducci�n(ones)
Estado 88 conflictos: 8 desplazamiento(s)/reducci�n(ones)


Gram�tica

    0 $accept: inicio $end

    1 inicio: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | iteracion
    6          | seleccion
    7          | declaracion
    8          | display
    9          | get
   10          | equmax
   11          | equmin

   12 $@1: /* vac�o */

   13 asignacion: ID $@1 OP_ASIG tipoAsig

   14 tipoAsig: expresion
   15         | CTE_S

   16 iteracion: while
   17          | for

   18 while: WHILE condicion THEN programa

   19 seleccion: IF condicion THEN programa
   20          | IF condicion THEN programa ELSE programa

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

   21 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC

   22 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC

   23 listaEqu: itemEqu
   24         | listaEqu COMA itemEqu

   25 itemEqu: ID
   26        | CTE_E
   27        | CTE_R

   28 listaVarDec: ID
   29            | listaVarDec COMA ID

   30 listaType: TYPE
   31          | listaType COMA TYPE

   32 TYPE: INTEGER
   33     | STRING
   34     | REAL

   35 expresion: termino
   36          | expresion OP_SUM termino
   37          | expresion OP_RESTA termino

   38 termino: factor
   39        | termino OP_MULT factor
   40        | termino OP_DIV factor

   41 factor: PARA expresion PARC
   42       | ID
   43       | CTE_E
   44       | CTE_R

   45 condicion: comparacion
   46          | condicion AND comparacion
   47          | condicion OR comparacion

   48 comparacion: expresion comparador expresion
   49            | equmax
   50            | equmin

   51 comparador: MENOR_IGUAL
   52           | MAYOR_IGUAL
   53           | MENOR
   54           | MAYOR
   55           | DIFF
   56           | IGUAL


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 13 18 20 25 28 29 42
CTE_S (259) 19
CTE_E (260) 26 43
CTE_R (261) 27 44
GET (262) 20
DISPLAY (263) 18 19
EQUMAX (264) 21
EQUMIN (265) 22
FOR (266)
WHILE (267) 14
THEN (268) 14 15 16
IF (269) 15 16
ELSE (270) 16
NOT (271)
AND (272) 46
OR (273) 47
OP_ASIG (274) 13
COMA (275) 24 29 31
PYC (276) 21 22
OP_SUM (277) 36
OP_RESTA (278) 37
OP_MULT (279) 39
OP_DIV (280) 40
CORCHA (281) 17 21 22
CORCHC (282) 17 21 22
PARA (283) 21 22 41
PARC (284) 21 22 41
LLAVEA (285)
LLAVEC (286)
MENOR_IGUAL (287) 51
MAYOR_IGUAL (288) 52
MENOR (289) 53
MAYOR (290) 54
DIFF (291) 55
IGUAL (292) 56
DIM (293) 17
AS (294) 17
INTEGER (295) 32
STRING (296) 33
REAL (297) 34


No terminales con las reglas donde aparecen

$accept (46)
    en la izquierda: 0
inicio (47)
    en la izquierda: 1, en la derecha: 0
programa (48)
    en la izquierda: 2 3, en la derecha: 1 3 18 19 20
sentencia (49)
    en la izquierda: 4 5 6 7 8 9 10 11, en la derecha: 2 3
asignacion (50)
    en la izquierda: 13, en la derecha: 4
$@1 (51)
    en la izquierda: 12, en la derecha: 13
iteracion (49)
    en la izquierda: 14, en la derecha: 5
seleccion (50)
    en la izquierda: 15 16, en la derecha: 6
declaracion (51)
    en la izquierda: 17, en la derecha: 7
display (52)
    en la izquierda: 18 19, en la derecha: 8
get (53)
    en la izquierda: 20, en la derecha: 9
equmax (54)
    en la izquierda: 21, en la derecha: 10 49
equmin (55)
    en la izquierda: 22, en la derecha: 11 50
listaEqu (56)
    en la izquierda: 23 24, en la derecha: 21 22 24
itemEqu (57)
    en la izquierda: 25 26 27, en la derecha: 23 24
listaVarDec (58)
    en la izquierda: 28 29, en la derecha: 17 29
listaType (59)
    en la izquierda: 30 31, en la derecha: 17 31
TYPE (60)
    en la izquierda: 32 33 34, en la derecha: 30 31
expresion (61)
    en la izquierda: 35 36 37, en la derecha: 13 21 22 36 37 41 48
termino (62)
    en la izquierda: 38 39 40, en la derecha: 35 36 37 39 40
factor (63)
    en la izquierda: 41 42 43 44, en la derecha: 38 39 40
condicion (64)
    en la izquierda: 45 46 47, en la derecha: 14 15 16 46 47
comparacion (65)
    en la izquierda: 48 49 50, en la derecha: 45 46 47
comparador (66)
    en la izquierda: 51 52 53 54 55 56, en la derecha: 48


estado 0

    0 $accept: . inicio $end

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    WHILE    desplazar e ir al estado 6
    IF       desplazar e ir al estado 7
    DIM      desplazar e ir al estado 8

    inicio       ir al estado 9
    programa     ir al estado 10
    sentencia    ir al estado 11
    asignacion   ir al estado 12
    iteracion    ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19


estado 1

   13 asignacion: ID . $@1 OP_ASIG tipoAsig

    $default  reduce usando la regla 12 ($@1)

    $@1  ir al estado 20


estado 2

   24 get: GET . ID

    ID  desplazar e ir al estado 21


estado 3

   22 display: DISPLAY . ID
   23        | DISPLAY . CTE_S

    ID     desplazar e ir al estado 22
    CTE_S  desplazar e ir al estado 23


estado 4

   21 equmax: EQUMAX . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 24


estado 5

   22 equmin: EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 25


estado 6

   14 iteracion: WHILE . condicion THEN programa

    ID      desplazar e ir al estado 26
    CTE_E   desplazar e ir al estado 27
    CTE_R   desplazar e ir al estado 28
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 29

    equmax       ir al estado 30
    equmin       ir al estado 31
    expresion    ir al estado 32
    termino      ir al estado 33
    factor       ir al estado 34
    condicion    ir al estado 35
    comparacion  ir al estado 36


estado 7

   15 seleccion: IF . condicion THEN programa
   16          | IF . condicion THEN programa ELSE programa

    ID      desplazar e ir al estado 26
    CTE_E   desplazar e ir al estado 27
    CTE_R   desplazar e ir al estado 28
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 29

    equmax       ir al estado 30
    equmin       ir al estado 31
    expresion    ir al estado 32
    termino      ir al estado 33
    factor       ir al estado 34
    condicion    ir al estado 37
    comparacion  ir al estado 36


estado 8

   21 declaracion: DIM . CORCHA listaVarDec CORCHC AS CORCHA listaType CORCHC

    CORCHA  desplazar e ir al estado 38


estado 9

    0 $accept: inicio . $end

    $end  desplazar e ir al estado 39


estado 10

    1 inicio: programa .
    3 programa: programa . sentencia

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    WHILE    desplazar e ir al estado 6
    IF       desplazar e ir al estado 7
    DIM      desplazar e ir al estado 8

    $default  reduce usando la regla 1 (inicio)

    sentencia    ir al estado 40
    asignacion   ir al estado 12
    iteracion    ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19


estado 11

    2 programa: sentencia .

    $default  reduce usando la regla 2 (programa)


estado 12

    4 sentencia: asignacion .

    $default  reduce usando la regla 4 (sentencia)


estado 13

    5 sentencia: iteracion .

    $default  reduce usando la regla 5 (sentencia)


estado 14

   16 iteracion: while .

    $default  reduce usando la regla 16 (iteracion)


estado 14

    6 sentencia: seleccion .

    $default  reduce usando la regla 6 (sentencia)


estado 15

    7 sentencia: declaracion .

    $default  reduce usando la regla 7 (sentencia)


estado 16

    8 sentencia: display .

    $default  reduce usando la regla 8 (sentencia)


estado 17

    9 sentencia: get .

    $default  reduce usando la regla 9 (sentencia)


estado 18

   10 sentencia: equmax .

    $default  reduce usando la regla 10 (sentencia)


estado 19

   11 sentencia: equmin .

    $default  reduce usando la regla 11 (sentencia)


estado 20

   13 asignacion: ID $@1 . OP_ASIG expresion

    OP_ASIG  desplazar e ir al estado 41


estado 21

   17 iteracion: for .

    $default  reduce usando la regla 17 (iteracion)


estado 22

   13 asignacion: ID $@1 . OP_ASIG tipoAsig

    OP_ASIG  desplazar e ir al estado 45


estado 23

   24 get: GET ID .

    $default  reduce usando la regla 24 (get)


estado 24

   21 equmax: EQUMAX PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    expresion  ir al estado 42
    termino    ir al estado 33
    factor     ir al estado 34


estado 25

   22 equmin: EQUMIN PARA . expresion PYC CORCHA listaEqu CORCHC PARC

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    expresion  ir al estado 43
    termino    ir al estado 33
    factor     ir al estado 34


estado 26

   42 factor: ID .

    $default  reduce usando la regla 42 (factor)


estado 27

   43 factor: CTE_E .

    $default  reduce usando la regla 43 (factor)


estado 28

   44 factor: CTE_R .

    $default  reduce usando la regla 44 (factor)


estado 29

   41 factor: PARA . expresion PARC

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    expresion  ir al estado 44
    termino    ir al estado 33
    factor     ir al estado 34


estado 30

   49 comparacion: equmax .

    $default  reduce usando la regla 49 (comparacion)


estado 31

   50 comparacion: equmin .

    $default  reduce usando la regla 50 (comparacion)


estado 32

   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RESTA termino
   48 comparacion: expresion . comparador expresion

    OP_SUM       desplazar e ir al estado 45
    OP_RESTA     desplazar e ir al estado 46
    MENOR_IGUAL  desplazar e ir al estado 47
    MAYOR_IGUAL  desplazar e ir al estado 48
    MENOR        desplazar e ir al estado 49
    MAYOR        desplazar e ir al estado 50
    DIFF         desplazar e ir al estado 51
    IGUAL        desplazar e ir al estado 52

    comparador  ir al estado 53


estado 33

   35 expresion: termino .
   39 termino: termino . OP_MULT factor
   40        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 54
    OP_DIV   desplazar e ir al estado 55

    $default  reduce usando la regla 35 (expresion)


estado 34

   38 termino: factor .

    $default  reduce usando la regla 38 (termino)


estado 35

   14 iteracion: WHILE condicion . THEN programa
   46 condicion: condicion . AND comparacion
   47          | condicion . OR comparacion

    THEN  desplazar e ir al estado 56
    AND   desplazar e ir al estado 57
    OR    desplazar e ir al estado 58


estado 36

   45 condicion: comparacion .

    $default  reduce usando la regla 45 (condicion)


estado 37

   15 seleccion: IF condicion . THEN programa
   16          | IF condicion . THEN programa ELSE programa
   46 condicion: condicion . AND comparacion
   47          | condicion . OR comparacion

    THEN  desplazar e ir al estado 59
    AND   desplazar e ir al estado 57
    OR    desplazar e ir al estado 58


estado 38

   17 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID  desplazar e ir al estado 60

    listaVarDec  ir al estado 61


estado 39

   28 equmin: IF EQUMIN . PARA expresion PYC CORCHA listaEqu CORCHC PARC

    PARA  desplazar e ir al estado 67


estado 40

   19 seleccion: IF condicion . THEN programa
   20          | IF condicion . THEN programa ELSE programa
   54 condicion: condicion . AND comparacion
   55          | condicion . OR comparacion

    THEN  desplazar e ir al estado 68
    AND   desplazar e ir al estado 64
    OR    desplazar e ir al estado 65


estado 41

   21 declaracion: DIM CORCHA . listaVarDec CORCHC AS CORCHA listaType CORCHC

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    expresion  ir al estado 62
    termino    ir al estado 33
    factor     ir al estado 34


estado 42

   21 equmax: EQUMAX PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 63
    OP_SUM    desplazar e ir al estado 45
    OP_RESTA  desplazar e ir al estado 46


estado 43

   22 equmin: EQUMIN PARA expresion . PYC CORCHA listaEqu CORCHC PARC
   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RESTA termino

    PYC       desplazar e ir al estado 64
    OP_SUM    desplazar e ir al estado 45
    OP_RESTA  desplazar e ir al estado 46


estado 44

   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RESTA termino
   41 factor: PARA expresion . PARC

    OP_SUM    desplazar e ir al estado 45
    OP_RESTA  desplazar e ir al estado 46
    PARC      desplazar e ir al estado 65


estado 45

   36 expresion: expresion OP_SUM . termino

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    termino  ir al estado 66
    factor   ir al estado 34


estado 46

   37 expresion: expresion OP_RESTA . termino

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    termino  ir al estado 67
    factor   ir al estado 34


estado 47

   51 comparador: MENOR_IGUAL .

    $default  reduce usando la regla 51 (comparador)


estado 48

   52 comparador: MAYOR_IGUAL .

    $default  reduce usando la regla 52 (comparador)


estado 49

   53 comparador: MENOR .

    $default  reduce usando la regla 53 (comparador)


estado 50

   54 comparador: MAYOR .

    $default  reduce usando la regla 54 (comparador)


estado 51

   55 comparador: DIFF .

    $default  reduce usando la regla 55 (comparador)


estado 52

   56 comparador: IGUAL .

    $default  reduce usando la regla 56 (comparador)


estado 53

   48 comparacion: expresion comparador . expresion

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    expresion  ir al estado 68
    termino    ir al estado 33
    factor     ir al estado 34


estado 54

   39 termino: termino OP_MULT . factor

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    factor  ir al estado 69


estado 55

   40 termino: termino OP_DIV . factor

    ID     desplazar e ir al estado 26
    CTE_E  desplazar e ir al estado 27
    CTE_R  desplazar e ir al estado 28
    PARA   desplazar e ir al estado 29

    factor  ir al estado 70


estado 56

   14 iteracion: WHILE condicion THEN . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    WHILE    desplazar e ir al estado 6
    IF       desplazar e ir al estado 7
    DIM      desplazar e ir al estado 8

    programa     ir al estado 71
    sentencia    ir al estado 11
    asignacion   ir al estado 12
    iteracion    ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19


estado 57

   46 condicion: condicion AND . comparacion

    ID      desplazar e ir al estado 26
    CTE_E   desplazar e ir al estado 27
    CTE_R   desplazar e ir al estado 28
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 29

    equmax       ir al estado 30
    equmin       ir al estado 31
    expresion    ir al estado 32
    termino      ir al estado 33
    factor       ir al estado 34
    comparacion  ir al estado 72


estado 58

   47 condicion: condicion OR . comparacion

    ID      desplazar e ir al estado 26
    CTE_E   desplazar e ir al estado 27
    CTE_R   desplazar e ir al estado 28
    EQUMAX  desplazar e ir al estado 4
    EQUMIN  desplazar e ir al estado 5
    PARA    desplazar e ir al estado 29

    equmax       ir al estado 30
    equmin       ir al estado 31
    expresion    ir al estado 32
    termino      ir al estado 33
    factor       ir al estado 34
    comparacion  ir al estado 73


estado 59

   15 seleccion: IF condicion THEN . programa
   16          | IF condicion THEN . programa ELSE programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    WHILE    desplazar e ir al estado 6
    IF       desplazar e ir al estado 7
    DIM      desplazar e ir al estado 8

    programa     ir al estado 74
    sentencia    ir al estado 11
    asignacion   ir al estado 12
    iteracion    ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19


estado 60

   28 listaVarDec: ID .

    $default  reduce usando la regla 28 (listaVarDec)


estado 61

   17 declaracion: DIM CORCHA listaVarDec . CORCHC AS CORCHA listaType CORCHC
   29 listaVarDec: listaVarDec . COMA ID

    COMA    desplazar e ir al estado 75
    CORCHC  desplazar e ir al estado 76


estado 62

   13 asignacion: ID $@1 OP_ASIG expresion .
   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RESTA termino

    OP_SUM    desplazar e ir al estado 45
    OP_RESTA  desplazar e ir al estado 46

    $default  reduce usando la regla 13 (asignacion)


estado 63

   21 equmax: EQUMAX PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 77


estado 64

   22 equmin: EQUMIN PARA expresion PYC . CORCHA listaEqu CORCHC PARC

    CORCHA  desplazar e ir al estado 78


estado 65

   41 factor: PARA expresion PARC .

    $default  reduce usando la regla 41 (factor)


estado 66

   36 expresion: expresion OP_SUM termino .
   39 termino: termino . OP_MULT factor
   40        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 54
    OP_DIV   desplazar e ir al estado 55

    $default  reduce usando la regla 36 (expresion)


estado 67

   37 expresion: expresion OP_RESTA termino .
   39 termino: termino . OP_MULT factor
   40        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 54
    OP_DIV   desplazar e ir al estado 55

    $default  reduce usando la regla 37 (expresion)


estado 68

   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RESTA termino
   48 comparacion: expresion comparador expresion .

    OP_SUM    desplazar e ir al estado 45
    OP_RESTA  desplazar e ir al estado 46

    $default  reduce usando la regla 48 (comparacion)


estado 69

   39 termino: termino OP_MULT factor .

    $default  reduce usando la regla 39 (termino)


estado 70

   40 termino: termino OP_DIV factor .

    $default  reduce usando la regla 40 (termino)


estado 71

    3 programa: programa . sentencia
   14 iteracion: WHILE condicion THEN programa .

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    WHILE    desplazar e ir al estado 6
    IF       desplazar e ir al estado 7
    DIM      desplazar e ir al estado 8

    ID        [reduce usando la regla 14 (iteracion)]
    GET       [reduce usando la regla 14 (iteracion)]
    DISPLAY   [reduce usando la regla 14 (iteracion)]
    EQUMAX    [reduce usando la regla 14 (iteracion)]
    EQUMIN    [reduce usando la regla 14 (iteracion)]
    WHILE     [reduce usando la regla 14 (iteracion)]
    IF        [reduce usando la regla 14 (iteracion)]
    DIM       [reduce usando la regla 14 (iteracion)]
    $default  reduce usando la regla 14 (iteracion)

    sentencia    ir al estado 40
    asignacion   ir al estado 12
    iteracion    ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19


estado 72

   46 condicion: condicion AND comparacion .

    $default  reduce usando la regla 46 (condicion)


estado 73

   47 condicion: condicion OR comparacion .

    $default  reduce usando la regla 47 (condicion)


estado 74

   47 termino: termino OP_MULT factor .

    $default  reduce usando la regla 47 (termino)


estado 84

   48 termino: termino OP_DIV factor .

    $default  reduce usando la regla 48 (termino)


estado 85

    3 programa: programa . sentencia
   18 while: WHILE condicion THEN programa .

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    WHILE    desplazar e ir al estado 6
    IF       desplazar e ir al estado 7
    ELSE     desplazar e ir al estado 79
    DIM      desplazar e ir al estado 8

    ID        [reduce usando la regla 15 (seleccion)]
    GET       [reduce usando la regla 15 (seleccion)]
    DISPLAY   [reduce usando la regla 15 (seleccion)]
    EQUMAX    [reduce usando la regla 15 (seleccion)]
    EQUMIN    [reduce usando la regla 15 (seleccion)]
    WHILE     [reduce usando la regla 15 (seleccion)]
    IF        [reduce usando la regla 15 (seleccion)]
    ELSE      [reduce usando la regla 15 (seleccion)]
    DIM       [reduce usando la regla 15 (seleccion)]
    $default  reduce usando la regla 15 (seleccion)

    sentencia    ir al estado 40
    asignacion   ir al estado 12
    iteracion    ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19


estado 75

   29 listaVarDec: listaVarDec COMA . ID

    ID  desplazar e ir al estado 80


estado 76

   17 declaracion: DIM CORCHA listaVarDec CORCHC . AS CORCHA listaType CORCHC

    AS  desplazar e ir al estado 81


estado 77

   21 equmax: EQUMAX PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 82
    CTE_E  desplazar e ir al estado 83
    CTE_R  desplazar e ir al estado 84

    listaEqu  ir al estado 85
    itemEqu   ir al estado 86


estado 78

   22 equmin: EQUMIN PARA expresion PYC CORCHA . listaEqu CORCHC PARC

    ID     desplazar e ir al estado 82
    CTE_E  desplazar e ir al estado 83
    CTE_R  desplazar e ir al estado 84

    listaEqu  ir al estado 87
    itemEqu   ir al estado 86


estado 79

   16 seleccion: IF condicion THEN programa ELSE . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    WHILE    desplazar e ir al estado 6
    IF       desplazar e ir al estado 7
    DIM      desplazar e ir al estado 8

    programa     ir al estado 88
    sentencia    ir al estado 11
    asignacion   ir al estado 12
    iteracion    ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19


estado 80

   29 listaVarDec: listaVarDec COMA ID .

    $default  reduce usando la regla 29 (listaVarDec)

    ID  desplazar e ir al estado 101

estado 81

estado 92

    CORCHA  desplazar e ir al estado 89


estado 82

   25 itemEqu: ID .

    $default  reduce usando la regla 25 (itemEqu)


estado 83

   26 itemEqu: CTE_E .

    $default  reduce usando la regla 26 (itemEqu)


estado 84

   27 itemEqu: CTE_R .

    $default  reduce usando la regla 27 (itemEqu)


estado 85

   21 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   24 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 90
    CORCHC  desplazar e ir al estado 91


estado 86

   23 listaEqu: itemEqu .

    $default  reduce usando la regla 23 (listaEqu)


estado 87

   22 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu . CORCHC PARC
   24 listaEqu: listaEqu . COMA itemEqu

    COMA    desplazar e ir al estado 90
    CORCHC  desplazar e ir al estado 92


estado 88

   20 seleccion: IF condicion THEN programa ELSE . programa

    ID       desplazar e ir al estado 1
    GET      desplazar e ir al estado 2
    DISPLAY  desplazar e ir al estado 3
    EQUMAX   desplazar e ir al estado 4
    EQUMIN   desplazar e ir al estado 5
    WHILE    desplazar e ir al estado 6
    IF       desplazar e ir al estado 7
    DIM      desplazar e ir al estado 8

    ID        [reduce usando la regla 16 (seleccion)]
    GET       [reduce usando la regla 16 (seleccion)]
    DISPLAY   [reduce usando la regla 16 (seleccion)]
    EQUMAX    [reduce usando la regla 16 (seleccion)]
    EQUMIN    [reduce usando la regla 16 (seleccion)]
    WHILE     [reduce usando la regla 16 (seleccion)]
    IF        [reduce usando la regla 16 (seleccion)]
    DIM       [reduce usando la regla 16 (seleccion)]
    $default  reduce usando la regla 16 (seleccion)

    sentencia    ir al estado 40
    asignacion   ir al estado 12
    iteracion    ir al estado 13
    seleccion    ir al estado 14
    declaracion  ir al estado 15
    display      ir al estado 16
    get          ir al estado 17
    equmax       ir al estado 18
    equmin       ir al estado 19


estado 89

   37 listaVarDec: listaVarDec COMA ID .

    INTEGER  desplazar e ir al estado 93
    STRING   desplazar e ir al estado 94
    REAL     desplazar e ir al estado 95

    listaType  ir al estado 96
    TYPE       ir al estado 97


estado 90

   24 listaEqu: listaEqu COMA . itemEqu

    ID     desplazar e ir al estado 82
    CTE_E  desplazar e ir al estado 83
    CTE_R  desplazar e ir al estado 84

    itemEqu  ir al estado 98


estado 91

   21 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 99


estado 92

   22 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC . PARC

    PARC  desplazar e ir al estado 100


estado 93

   32 TYPE: INTEGER .

    $default  reduce usando la regla 32 (TYPE)


estado 94

   33 TYPE: STRING .

    $default  reduce usando la regla 33 (TYPE)


estado 95

   34 TYPE: REAL .

    $default  reduce usando la regla 34 (TYPE)


estado 96

   17 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   31 listaType: listaType . COMA TYPE

    COMA    desplazar e ir al estado 101
    CORCHC  desplazar e ir al estado 102


estado 97

   30 listaType: TYPE .

    $default  reduce usando la regla 30 (listaType)


estado 98

   24 listaEqu: listaEqu COMA itemEqu .

    $default  reduce usando la regla 24 (listaEqu)


estado 99

   21 equmax: EQUMAX PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 21 (equmax)


estado 100

   22 equmin: EQUMIN PARA expresion PYC CORCHA listaEqu CORCHC PARC .

    $default  reduce usando la regla 22 (equmin)


estado 101

   31 listaType: listaType COMA . TYPE

    INTEGER  desplazar e ir al estado 93
    STRING   desplazar e ir al estado 94
    REAL     desplazar e ir al estado 95

    TYPE  ir al estado 103


estado 102

   21 declaracion: DIM CORCHA listaVarDec CORCHC AS CORCHA listaType . CORCHC
   39 listaType: listaType . COMA TYPE

    COMA    desplazar e ir al estado 137
    CORCHC  desplazar e ir al estado 138


estado 103

   31 listaType: listaType COMA TYPE .

    $default  reduce usando la regla 31 (listaType)
